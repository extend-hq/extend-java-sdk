/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.workflowrunoutput.requests;

import ai.extend.core.ObjectMappers;
import ai.extend.types.ProvidedProcessorOutput;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = WorkflowRunOutputUpdateRequest.Builder.class)
public final class WorkflowRunOutputUpdateRequest {
    private final ProvidedProcessorOutput reviewedOutput;

    private final Map<String, Object> additionalProperties;

    private WorkflowRunOutputUpdateRequest(
            ProvidedProcessorOutput reviewedOutput, Map<String, Object> additionalProperties) {
        this.reviewedOutput = reviewedOutput;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The corrected output of the processor when run against the file.
     * <p>This should conform to the output type schema of the given processor.</p>
     * <p>If this is an extraction result, you can include all fields, or just the ones that were corrected, our system will handle merges/dedupes. However, if you do include a field, we assume the value included in the final reviewed value.</p>
     */
    @JsonProperty("reviewedOutput")
    public ProvidedProcessorOutput getReviewedOutput() {
        return reviewedOutput;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WorkflowRunOutputUpdateRequest && equalTo((WorkflowRunOutputUpdateRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WorkflowRunOutputUpdateRequest other) {
        return reviewedOutput.equals(other.reviewedOutput);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.reviewedOutput);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ReviewedOutputStage builder() {
        return new Builder();
    }

    public interface ReviewedOutputStage {
        /**
         * <p>The corrected output of the processor when run against the file.</p>
         * <p>This should conform to the output type schema of the given processor.</p>
         * <p>If this is an extraction result, you can include all fields, or just the ones that were corrected, our system will handle merges/dedupes. However, if you do include a field, we assume the value included in the final reviewed value.</p>
         */
        _FinalStage reviewedOutput(@NotNull ProvidedProcessorOutput reviewedOutput);

        Builder from(WorkflowRunOutputUpdateRequest other);
    }

    public interface _FinalStage {
        WorkflowRunOutputUpdateRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ReviewedOutputStage, _FinalStage {
        private ProvidedProcessorOutput reviewedOutput;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WorkflowRunOutputUpdateRequest other) {
            reviewedOutput(other.getReviewedOutput());
            return this;
        }

        /**
         * <p>The corrected output of the processor when run against the file.</p>
         * <p>This should conform to the output type schema of the given processor.</p>
         * <p>If this is an extraction result, you can include all fields, or just the ones that were corrected, our system will handle merges/dedupes. However, if you do include a field, we assume the value included in the final reviewed value.</p>
         * <p>The corrected output of the processor when run against the file.</p>
         * <p>This should conform to the output type schema of the given processor.</p>
         * <p>If this is an extraction result, you can include all fields, or just the ones that were corrected, our system will handle merges/dedupes. However, if you do include a field, we assume the value included in the final reviewed value.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("reviewedOutput")
        public _FinalStage reviewedOutput(@NotNull ProvidedProcessorOutput reviewedOutput) {
            this.reviewedOutput = Objects.requireNonNull(reviewedOutput, "reviewedOutput must not be null");
            return this;
        }

        @java.lang.Override
        public WorkflowRunOutputUpdateRequest build() {
            return new WorkflowRunOutputUpdateRequest(reviewedOutput, additionalProperties);
        }
    }
}
