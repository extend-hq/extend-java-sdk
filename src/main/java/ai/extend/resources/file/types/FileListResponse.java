/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.file.types;

import ai.extend.core.ObjectMappers;
import ai.extend.types.File;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = FileListResponse.Builder.class)
public final class FileListResponse {
    private final boolean success;

    private final List<File> files;

    private final Optional<String> nextPageToken;

    private final Map<String, Object> additionalProperties;

    private FileListResponse(
            boolean success,
            List<File> files,
            Optional<String> nextPageToken,
            Map<String, Object> additionalProperties) {
        this.success = success;
        this.files = files;
        this.nextPageToken = nextPageToken;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("success")
    public boolean getSuccess() {
        return success;
    }

    @JsonProperty("files")
    public List<File> getFiles() {
        return files;
    }

    @JsonProperty("nextPageToken")
    public Optional<String> getNextPageToken() {
        return nextPageToken;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof FileListResponse && equalTo((FileListResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(FileListResponse other) {
        return success == other.success && files.equals(other.files) && nextPageToken.equals(other.nextPageToken);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.success, this.files, this.nextPageToken);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SuccessStage builder() {
        return new Builder();
    }

    public interface SuccessStage {
        _FinalStage success(boolean success);

        Builder from(FileListResponse other);
    }

    public interface _FinalStage {
        FileListResponse build();

        _FinalStage files(List<File> files);

        _FinalStage addFiles(File files);

        _FinalStage addAllFiles(List<File> files);

        _FinalStage nextPageToken(Optional<String> nextPageToken);

        _FinalStage nextPageToken(String nextPageToken);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SuccessStage, _FinalStage {
        private boolean success;

        private Optional<String> nextPageToken = Optional.empty();

        private List<File> files = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(FileListResponse other) {
            success(other.getSuccess());
            files(other.getFiles());
            nextPageToken(other.getNextPageToken());
            return this;
        }

        @java.lang.Override
        @JsonSetter("success")
        public _FinalStage success(boolean success) {
            this.success = success;
            return this;
        }

        @java.lang.Override
        public _FinalStage nextPageToken(String nextPageToken) {
            this.nextPageToken = Optional.ofNullable(nextPageToken);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "nextPageToken", nulls = Nulls.SKIP)
        public _FinalStage nextPageToken(Optional<String> nextPageToken) {
            this.nextPageToken = nextPageToken;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllFiles(List<File> files) {
            this.files.addAll(files);
            return this;
        }

        @java.lang.Override
        public _FinalStage addFiles(File files) {
            this.files.add(files);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "files", nulls = Nulls.SKIP)
        public _FinalStage files(List<File> files) {
            this.files.clear();
            this.files.addAll(files);
            return this;
        }

        @java.lang.Override
        public FileListResponse build() {
            return new FileListResponse(success, files, nextPageToken, additionalProperties);
        }
    }
}
