/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.workflowrun.types;

import ai.extend.core.ObjectMappers;
import ai.extend.types.File;
import ai.extend.types.ProcessorRun;
import ai.extend.types.StepRun;
import ai.extend.types.Workflow;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = WorkflowRunCancelResponseWorkflowRun.Builder.class)
public final class WorkflowRunCancelResponseWorkflowRun {
    private final Optional<String> status;

    private final String object;

    private final String id;

    private final String name;

    private final String url;

    private final Map<String, Object> metadata;

    private final Optional<String> batchId;

    private final List<File> files;

    private final Optional<String> failureReason;

    private final Optional<String> failureMessage;

    private final OffsetDateTime initialRunAt;

    private final Optional<String> reviewedBy;

    private final boolean reviewed;

    private final Optional<String> rejectionNote;

    private final Optional<OffsetDateTime> reviewedAt;

    private final Optional<OffsetDateTime> startTime;

    private final Optional<OffsetDateTime> endTime;

    private final List<ProcessorRun> outputs;

    private final List<StepRun> stepRuns;

    private final Workflow workflow;

    private final Map<String, Object> additionalProperties;

    private WorkflowRunCancelResponseWorkflowRun(
            Optional<String> status,
            String object,
            String id,
            String name,
            String url,
            Map<String, Object> metadata,
            Optional<String> batchId,
            List<File> files,
            Optional<String> failureReason,
            Optional<String> failureMessage,
            OffsetDateTime initialRunAt,
            Optional<String> reviewedBy,
            boolean reviewed,
            Optional<String> rejectionNote,
            Optional<OffsetDateTime> reviewedAt,
            Optional<OffsetDateTime> startTime,
            Optional<OffsetDateTime> endTime,
            List<ProcessorRun> outputs,
            List<StepRun> stepRuns,
            Workflow workflow,
            Map<String, Object> additionalProperties) {
        this.status = status;
        this.object = object;
        this.id = id;
        this.name = name;
        this.url = url;
        this.metadata = metadata;
        this.batchId = batchId;
        this.files = files;
        this.failureReason = failureReason;
        this.failureMessage = failureMessage;
        this.initialRunAt = initialRunAt;
        this.reviewedBy = reviewedBy;
        this.reviewed = reviewed;
        this.rejectionNote = rejectionNote;
        this.reviewedAt = reviewedAt;
        this.startTime = startTime;
        this.endTime = endTime;
        this.outputs = outputs;
        this.stepRuns = stepRuns;
        this.workflow = workflow;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("status")
    public Optional<String> getStatus() {
        return status;
    }

    /**
     * @return The type of response. In this case, it will always be <code>&quot;workflow_run&quot;</code>.
     */
    @JsonProperty("object")
    public String getObject() {
        return object;
    }

    /**
     * @return The ID of the workflow run.
     * <p>Example: <code>&quot;workflow_run_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The name of the workflow run.
     * <p>Example: <code>&quot;myFirstFile.pdf&quot;</code></p>
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * @return A URL to view this workflow run in the Extend UI.
     * <p>Example: <code>&quot;https://dashboard.extend.ai/workflows/workflow_Bk9mNp2qWs5_xL8vR4tYh?workflowRunId=workflow_run_Zj3nMx7ZPd9f4c2WQ_kAg&quot;</code></p>
     */
    @JsonProperty("url")
    public String getUrl() {
        return url;
    }

    /**
     * @return The metadata that was passed in when running the Workflow.
     */
    @JsonProperty("metadata")
    public Map<String, Object> getMetadata() {
        return metadata;
    }

    /**
     * @return The batch ID of the WorkflowRun. If this WorkflowRun was created as part of a batch of files, all runs in that batch will have the same batch ID.
     * <p>Example: <code>&quot;batch_7Ws31-F5&quot;</code></p>
     */
    @JsonProperty("batchId")
    public Optional<String> getBatchId() {
        return batchId;
    }

    @JsonProperty("files")
    public List<File> getFiles() {
        return files;
    }

    /**
     * @return The reason why the workflow run failed. Will only be included if the workflow run status is &quot;FAILED&quot;.
     */
    @JsonProperty("failureReason")
    public Optional<String> getFailureReason() {
        return failureReason;
    }

    /**
     * @return A more detailed message about the failure. Will only be included if the workflow run status is &quot;FAILED&quot;.
     */
    @JsonProperty("failureMessage")
    public Optional<String> getFailureMessage() {
        return failureMessage;
    }

    /**
     * @return The time (in UTC) at which the workflow run was created. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2025-04-28T17:01:39.285Z&quot;</code></p>
     */
    @JsonProperty("initialRunAt")
    public OffsetDateTime getInitialRunAt() {
        return initialRunAt;
    }

    /**
     * @return The email address of the person who reviewed the workflow run. Will not be included if the workflow run has not been reviewed.
     * <p>Example: <code>&quot;jane.doe@example.com&quot;</code></p>
     */
    @JsonProperty("reviewedBy")
    public Optional<String> getReviewedBy() {
        return reviewedBy;
    }

    /**
     * @return Whether the workflow run has been reviewed.
     */
    @JsonProperty("reviewed")
    public boolean getReviewed() {
        return reviewed;
    }

    /**
     * @return A note that is added if a workflow run is rejected.
     * <p>Example: <code>&quot;Invalid invoice format&quot;</code></p>
     */
    @JsonProperty("rejectionNote")
    public Optional<String> getRejectionNote() {
        return rejectionNote;
    }

    /**
     * @return The time (in UTC) at which the workflow run was reviewed. Will follow the RFC 3339 format. Will not be included if the workflow run has not been reviewed.
     * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
     */
    @JsonProperty("reviewedAt")
    public Optional<OffsetDateTime> getReviewedAt() {
        return reviewedAt;
    }

    /**
     * @return The time (in UTC) at which the workflow run started executing. This will always be after the <code>initialRunAt</code> time. Will follow the RFC 3339 format. Will not be included if the workflow run has not started executing.
     * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
     */
    @JsonProperty("startTime")
    public Optional<OffsetDateTime> getStartTime() {
        return startTime;
    }

    /**
     * @return The time (in UTC) that the workflow finished executing. Will follow the RFC 3339 format. Will not be included if the workflow run has not finished executing.
     * <p>Example: <code>&quot;2024-03-21T15:35:00Z&quot;</code></p>
     */
    @JsonProperty("endTime")
    public Optional<OffsetDateTime> getEndTime() {
        return endTime;
    }

    @JsonProperty("outputs")
    public List<ProcessorRun> getOutputs() {
        return outputs;
    }

    /**
     * @return An array of WorkflowStepRun objects. Each WorkflowStepRun represents a single run of a WorkflowStep and contains details about the step and the run's output.
     * <p>Note: This field currently supports External Data Validation and Rule Validation step types. Document processor run outputs are included in the outputs field.</p>
     */
    @JsonProperty("stepRuns")
    public List<StepRun> getStepRuns() {
        return stepRuns;
    }

    @JsonProperty("workflow")
    public Workflow getWorkflow() {
        return workflow;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WorkflowRunCancelResponseWorkflowRun
                && equalTo((WorkflowRunCancelResponseWorkflowRun) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WorkflowRunCancelResponseWorkflowRun other) {
        return status.equals(other.status)
                && object.equals(other.object)
                && id.equals(other.id)
                && name.equals(other.name)
                && url.equals(other.url)
                && metadata.equals(other.metadata)
                && batchId.equals(other.batchId)
                && files.equals(other.files)
                && failureReason.equals(other.failureReason)
                && failureMessage.equals(other.failureMessage)
                && initialRunAt.equals(other.initialRunAt)
                && reviewedBy.equals(other.reviewedBy)
                && reviewed == other.reviewed
                && rejectionNote.equals(other.rejectionNote)
                && reviewedAt.equals(other.reviewedAt)
                && startTime.equals(other.startTime)
                && endTime.equals(other.endTime)
                && outputs.equals(other.outputs)
                && stepRuns.equals(other.stepRuns)
                && workflow.equals(other.workflow);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.status,
                this.object,
                this.id,
                this.name,
                this.url,
                this.metadata,
                this.batchId,
                this.files,
                this.failureReason,
                this.failureMessage,
                this.initialRunAt,
                this.reviewedBy,
                this.reviewed,
                this.rejectionNote,
                this.reviewedAt,
                this.startTime,
                this.endTime,
                this.outputs,
                this.stepRuns,
                this.workflow);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ObjectStage builder() {
        return new Builder();
    }

    public interface ObjectStage {
        /**
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_run&quot;</code>.</p>
         */
        IdStage object(@NotNull String object);

        Builder from(WorkflowRunCancelResponseWorkflowRun other);
    }

    public interface IdStage {
        /**
         * <p>The ID of the workflow run.</p>
         * <p>Example: <code>&quot;workflow_run_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         */
        NameStage id(@NotNull String id);
    }

    public interface NameStage {
        /**
         * <p>The name of the workflow run.</p>
         * <p>Example: <code>&quot;myFirstFile.pdf&quot;</code></p>
         */
        UrlStage name(@NotNull String name);
    }

    public interface UrlStage {
        /**
         * <p>A URL to view this workflow run in the Extend UI.</p>
         * <p>Example: <code>&quot;https://dashboard.extend.ai/workflows/workflow_Bk9mNp2qWs5_xL8vR4tYh?workflowRunId=workflow_run_Zj3nMx7ZPd9f4c2WQ_kAg&quot;</code></p>
         */
        InitialRunAtStage url(@NotNull String url);
    }

    public interface InitialRunAtStage {
        /**
         * <p>The time (in UTC) at which the workflow run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2025-04-28T17:01:39.285Z&quot;</code></p>
         */
        ReviewedStage initialRunAt(@NotNull OffsetDateTime initialRunAt);
    }

    public interface ReviewedStage {
        /**
         * <p>Whether the workflow run has been reviewed.</p>
         */
        WorkflowStage reviewed(boolean reviewed);
    }

    public interface WorkflowStage {
        _FinalStage workflow(@NotNull Workflow workflow);
    }

    public interface _FinalStage {
        WorkflowRunCancelResponseWorkflowRun build();

        _FinalStage status(Optional<String> status);

        _FinalStage status(String status);

        /**
         * <p>The metadata that was passed in when running the Workflow.</p>
         */
        _FinalStage metadata(Map<String, Object> metadata);

        _FinalStage putAllMetadata(Map<String, Object> metadata);

        _FinalStage metadata(String key, Object value);

        /**
         * <p>The batch ID of the WorkflowRun. If this WorkflowRun was created as part of a batch of files, all runs in that batch will have the same batch ID.</p>
         * <p>Example: <code>&quot;batch_7Ws31-F5&quot;</code></p>
         */
        _FinalStage batchId(Optional<String> batchId);

        _FinalStage batchId(String batchId);

        _FinalStage files(List<File> files);

        _FinalStage addFiles(File files);

        _FinalStage addAllFiles(List<File> files);

        /**
         * <p>The reason why the workflow run failed. Will only be included if the workflow run status is &quot;FAILED&quot;.</p>
         */
        _FinalStage failureReason(Optional<String> failureReason);

        _FinalStage failureReason(String failureReason);

        /**
         * <p>A more detailed message about the failure. Will only be included if the workflow run status is &quot;FAILED&quot;.</p>
         */
        _FinalStage failureMessage(Optional<String> failureMessage);

        _FinalStage failureMessage(String failureMessage);

        /**
         * <p>The email address of the person who reviewed the workflow run. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;jane.doe@example.com&quot;</code></p>
         */
        _FinalStage reviewedBy(Optional<String> reviewedBy);

        _FinalStage reviewedBy(String reviewedBy);

        /**
         * <p>A note that is added if a workflow run is rejected.</p>
         * <p>Example: <code>&quot;Invalid invoice format&quot;</code></p>
         */
        _FinalStage rejectionNote(Optional<String> rejectionNote);

        _FinalStage rejectionNote(String rejectionNote);

        /**
         * <p>The time (in UTC) at which the workflow run was reviewed. Will follow the RFC 3339 format. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         */
        _FinalStage reviewedAt(Optional<OffsetDateTime> reviewedAt);

        _FinalStage reviewedAt(OffsetDateTime reviewedAt);

        /**
         * <p>The time (in UTC) at which the workflow run started executing. This will always be after the <code>initialRunAt</code> time. Will follow the RFC 3339 format. Will not be included if the workflow run has not started executing.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         */
        _FinalStage startTime(Optional<OffsetDateTime> startTime);

        _FinalStage startTime(OffsetDateTime startTime);

        /**
         * <p>The time (in UTC) that the workflow finished executing. Will follow the RFC 3339 format. Will not be included if the workflow run has not finished executing.</p>
         * <p>Example: <code>&quot;2024-03-21T15:35:00Z&quot;</code></p>
         */
        _FinalStage endTime(Optional<OffsetDateTime> endTime);

        _FinalStage endTime(OffsetDateTime endTime);

        _FinalStage outputs(List<ProcessorRun> outputs);

        _FinalStage addOutputs(ProcessorRun outputs);

        _FinalStage addAllOutputs(List<ProcessorRun> outputs);

        /**
         * <p>An array of WorkflowStepRun objects. Each WorkflowStepRun represents a single run of a WorkflowStep and contains details about the step and the run's output.</p>
         * <p>Note: This field currently supports External Data Validation and Rule Validation step types. Document processor run outputs are included in the outputs field.</p>
         */
        _FinalStage stepRuns(List<StepRun> stepRuns);

        _FinalStage addStepRuns(StepRun stepRuns);

        _FinalStage addAllStepRuns(List<StepRun> stepRuns);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ObjectStage,
                    IdStage,
                    NameStage,
                    UrlStage,
                    InitialRunAtStage,
                    ReviewedStage,
                    WorkflowStage,
                    _FinalStage {
        private String object;

        private String id;

        private String name;

        private String url;

        private OffsetDateTime initialRunAt;

        private boolean reviewed;

        private Workflow workflow;

        private List<StepRun> stepRuns = new ArrayList<>();

        private List<ProcessorRun> outputs = new ArrayList<>();

        private Optional<OffsetDateTime> endTime = Optional.empty();

        private Optional<OffsetDateTime> startTime = Optional.empty();

        private Optional<OffsetDateTime> reviewedAt = Optional.empty();

        private Optional<String> rejectionNote = Optional.empty();

        private Optional<String> reviewedBy = Optional.empty();

        private Optional<String> failureMessage = Optional.empty();

        private Optional<String> failureReason = Optional.empty();

        private List<File> files = new ArrayList<>();

        private Optional<String> batchId = Optional.empty();

        private Map<String, Object> metadata = new LinkedHashMap<>();

        private Optional<String> status = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WorkflowRunCancelResponseWorkflowRun other) {
            status(other.getStatus());
            object(other.getObject());
            id(other.getId());
            name(other.getName());
            url(other.getUrl());
            metadata(other.getMetadata());
            batchId(other.getBatchId());
            files(other.getFiles());
            failureReason(other.getFailureReason());
            failureMessage(other.getFailureMessage());
            initialRunAt(other.getInitialRunAt());
            reviewedBy(other.getReviewedBy());
            reviewed(other.getReviewed());
            rejectionNote(other.getRejectionNote());
            reviewedAt(other.getReviewedAt());
            startTime(other.getStartTime());
            endTime(other.getEndTime());
            outputs(other.getOutputs());
            stepRuns(other.getStepRuns());
            workflow(other.getWorkflow());
            return this;
        }

        /**
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_run&quot;</code>.</p>
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_run&quot;</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("object")
        public IdStage object(@NotNull String object) {
            this.object = Objects.requireNonNull(object, "object must not be null");
            return this;
        }

        /**
         * <p>The ID of the workflow run.</p>
         * <p>Example: <code>&quot;workflow_run_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         * <p>The ID of the workflow run.</p>
         * <p>Example: <code>&quot;workflow_run_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public NameStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The name of the workflow run.</p>
         * <p>Example: <code>&quot;myFirstFile.pdf&quot;</code></p>
         * <p>The name of the workflow run.</p>
         * <p>Example: <code>&quot;myFirstFile.pdf&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public UrlStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        /**
         * <p>A URL to view this workflow run in the Extend UI.</p>
         * <p>Example: <code>&quot;https://dashboard.extend.ai/workflows/workflow_Bk9mNp2qWs5_xL8vR4tYh?workflowRunId=workflow_run_Zj3nMx7ZPd9f4c2WQ_kAg&quot;</code></p>
         * <p>A URL to view this workflow run in the Extend UI.</p>
         * <p>Example: <code>&quot;https://dashboard.extend.ai/workflows/workflow_Bk9mNp2qWs5_xL8vR4tYh?workflowRunId=workflow_run_Zj3nMx7ZPd9f4c2WQ_kAg&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("url")
        public InitialRunAtStage url(@NotNull String url) {
            this.url = Objects.requireNonNull(url, "url must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2025-04-28T17:01:39.285Z&quot;</code></p>
         * <p>The time (in UTC) at which the workflow run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2025-04-28T17:01:39.285Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("initialRunAt")
        public ReviewedStage initialRunAt(@NotNull OffsetDateTime initialRunAt) {
            this.initialRunAt = Objects.requireNonNull(initialRunAt, "initialRunAt must not be null");
            return this;
        }

        /**
         * <p>Whether the workflow run has been reviewed.</p>
         * <p>Whether the workflow run has been reviewed.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("reviewed")
        public WorkflowStage reviewed(boolean reviewed) {
            this.reviewed = reviewed;
            return this;
        }

        @java.lang.Override
        @JsonSetter("workflow")
        public _FinalStage workflow(@NotNull Workflow workflow) {
            this.workflow = Objects.requireNonNull(workflow, "workflow must not be null");
            return this;
        }

        /**
         * <p>An array of WorkflowStepRun objects. Each WorkflowStepRun represents a single run of a WorkflowStep and contains details about the step and the run's output.</p>
         * <p>Note: This field currently supports External Data Validation and Rule Validation step types. Document processor run outputs are included in the outputs field.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllStepRuns(List<StepRun> stepRuns) {
            this.stepRuns.addAll(stepRuns);
            return this;
        }

        /**
         * <p>An array of WorkflowStepRun objects. Each WorkflowStepRun represents a single run of a WorkflowStep and contains details about the step and the run's output.</p>
         * <p>Note: This field currently supports External Data Validation and Rule Validation step types. Document processor run outputs are included in the outputs field.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addStepRuns(StepRun stepRuns) {
            this.stepRuns.add(stepRuns);
            return this;
        }

        /**
         * <p>An array of WorkflowStepRun objects. Each WorkflowStepRun represents a single run of a WorkflowStep and contains details about the step and the run's output.</p>
         * <p>Note: This field currently supports External Data Validation and Rule Validation step types. Document processor run outputs are included in the outputs field.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "stepRuns", nulls = Nulls.SKIP)
        public _FinalStage stepRuns(List<StepRun> stepRuns) {
            this.stepRuns.clear();
            this.stepRuns.addAll(stepRuns);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllOutputs(List<ProcessorRun> outputs) {
            this.outputs.addAll(outputs);
            return this;
        }

        @java.lang.Override
        public _FinalStage addOutputs(ProcessorRun outputs) {
            this.outputs.add(outputs);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "outputs", nulls = Nulls.SKIP)
        public _FinalStage outputs(List<ProcessorRun> outputs) {
            this.outputs.clear();
            this.outputs.addAll(outputs);
            return this;
        }

        /**
         * <p>The time (in UTC) that the workflow finished executing. Will follow the RFC 3339 format. Will not be included if the workflow run has not finished executing.</p>
         * <p>Example: <code>&quot;2024-03-21T15:35:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage endTime(OffsetDateTime endTime) {
            this.endTime = Optional.ofNullable(endTime);
            return this;
        }

        /**
         * <p>The time (in UTC) that the workflow finished executing. Will follow the RFC 3339 format. Will not be included if the workflow run has not finished executing.</p>
         * <p>Example: <code>&quot;2024-03-21T15:35:00Z&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "endTime", nulls = Nulls.SKIP)
        public _FinalStage endTime(Optional<OffsetDateTime> endTime) {
            this.endTime = endTime;
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run started executing. This will always be after the <code>initialRunAt</code> time. Will follow the RFC 3339 format. Will not be included if the workflow run has not started executing.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage startTime(OffsetDateTime startTime) {
            this.startTime = Optional.ofNullable(startTime);
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run started executing. This will always be after the <code>initialRunAt</code> time. Will follow the RFC 3339 format. Will not be included if the workflow run has not started executing.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "startTime", nulls = Nulls.SKIP)
        public _FinalStage startTime(Optional<OffsetDateTime> startTime) {
            this.startTime = startTime;
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run was reviewed. Will follow the RFC 3339 format. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage reviewedAt(OffsetDateTime reviewedAt) {
            this.reviewedAt = Optional.ofNullable(reviewedAt);
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run was reviewed. Will follow the RFC 3339 format. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "reviewedAt", nulls = Nulls.SKIP)
        public _FinalStage reviewedAt(Optional<OffsetDateTime> reviewedAt) {
            this.reviewedAt = reviewedAt;
            return this;
        }

        /**
         * <p>A note that is added if a workflow run is rejected.</p>
         * <p>Example: <code>&quot;Invalid invoice format&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage rejectionNote(String rejectionNote) {
            this.rejectionNote = Optional.ofNullable(rejectionNote);
            return this;
        }

        /**
         * <p>A note that is added if a workflow run is rejected.</p>
         * <p>Example: <code>&quot;Invalid invoice format&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "rejectionNote", nulls = Nulls.SKIP)
        public _FinalStage rejectionNote(Optional<String> rejectionNote) {
            this.rejectionNote = rejectionNote;
            return this;
        }

        /**
         * <p>The email address of the person who reviewed the workflow run. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;jane.doe@example.com&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage reviewedBy(String reviewedBy) {
            this.reviewedBy = Optional.ofNullable(reviewedBy);
            return this;
        }

        /**
         * <p>The email address of the person who reviewed the workflow run. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;jane.doe@example.com&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "reviewedBy", nulls = Nulls.SKIP)
        public _FinalStage reviewedBy(Optional<String> reviewedBy) {
            this.reviewedBy = reviewedBy;
            return this;
        }

        /**
         * <p>A more detailed message about the failure. Will only be included if the workflow run status is &quot;FAILED&quot;.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage failureMessage(String failureMessage) {
            this.failureMessage = Optional.ofNullable(failureMessage);
            return this;
        }

        /**
         * <p>A more detailed message about the failure. Will only be included if the workflow run status is &quot;FAILED&quot;.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "failureMessage", nulls = Nulls.SKIP)
        public _FinalStage failureMessage(Optional<String> failureMessage) {
            this.failureMessage = failureMessage;
            return this;
        }

        /**
         * <p>The reason why the workflow run failed. Will only be included if the workflow run status is &quot;FAILED&quot;.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage failureReason(String failureReason) {
            this.failureReason = Optional.ofNullable(failureReason);
            return this;
        }

        /**
         * <p>The reason why the workflow run failed. Will only be included if the workflow run status is &quot;FAILED&quot;.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "failureReason", nulls = Nulls.SKIP)
        public _FinalStage failureReason(Optional<String> failureReason) {
            this.failureReason = failureReason;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllFiles(List<File> files) {
            this.files.addAll(files);
            return this;
        }

        @java.lang.Override
        public _FinalStage addFiles(File files) {
            this.files.add(files);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "files", nulls = Nulls.SKIP)
        public _FinalStage files(List<File> files) {
            this.files.clear();
            this.files.addAll(files);
            return this;
        }

        /**
         * <p>The batch ID of the WorkflowRun. If this WorkflowRun was created as part of a batch of files, all runs in that batch will have the same batch ID.</p>
         * <p>Example: <code>&quot;batch_7Ws31-F5&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage batchId(String batchId) {
            this.batchId = Optional.ofNullable(batchId);
            return this;
        }

        /**
         * <p>The batch ID of the WorkflowRun. If this WorkflowRun was created as part of a batch of files, all runs in that batch will have the same batch ID.</p>
         * <p>Example: <code>&quot;batch_7Ws31-F5&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "batchId", nulls = Nulls.SKIP)
        public _FinalStage batchId(Optional<String> batchId) {
            this.batchId = batchId;
            return this;
        }

        /**
         * <p>The metadata that was passed in when running the Workflow.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage metadata(String key, Object value) {
            this.metadata.put(key, value);
            return this;
        }

        /**
         * <p>The metadata that was passed in when running the Workflow.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage putAllMetadata(Map<String, Object> metadata) {
            this.metadata.putAll(metadata);
            return this;
        }

        /**
         * <p>The metadata that was passed in when running the Workflow.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "metadata", nulls = Nulls.SKIP)
        public _FinalStage metadata(Map<String, Object> metadata) {
            this.metadata.clear();
            this.metadata.putAll(metadata);
            return this;
        }

        @java.lang.Override
        public _FinalStage status(String status) {
            this.status = Optional.ofNullable(status);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "status", nulls = Nulls.SKIP)
        public _FinalStage status(Optional<String> status) {
            this.status = status;
            return this;
        }

        @java.lang.Override
        public WorkflowRunCancelResponseWorkflowRun build() {
            return new WorkflowRunCancelResponseWorkflowRun(
                    status,
                    object,
                    id,
                    name,
                    url,
                    metadata,
                    batchId,
                    files,
                    failureReason,
                    failureMessage,
                    initialRunAt,
                    reviewedBy,
                    reviewed,
                    rejectionNote,
                    reviewedAt,
                    startTime,
                    endTime,
                    outputs,
                    stepRuns,
                    workflow,
                    additionalProperties);
        }
    }
}
