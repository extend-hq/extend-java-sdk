/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.batchworkflowrun.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BatchWorkflowRunCreateResponse.Builder.class)
public final class BatchWorkflowRunCreateResponse {
    private final boolean success;

    private final String batchId;

    private final Map<String, Object> additionalProperties;

    private BatchWorkflowRunCreateResponse(boolean success, String batchId, Map<String, Object> additionalProperties) {
        this.success = success;
        this.batchId = batchId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Indicates whether the batch request was successfully accepted and queued. <code>true</code> signifies success.
     */
    @JsonProperty("success")
    public boolean getSuccess() {
        return success;
    }

    /**
     * @return A unique identifier for the submitted batch. This ID can be used to correlate the workflow runs created by this request. You can find this <code>batchId</code> associated with individual runs when listing workflow runs or in webhook payloads.
     */
    @JsonProperty("batchId")
    public String getBatchId() {
        return batchId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BatchWorkflowRunCreateResponse && equalTo((BatchWorkflowRunCreateResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BatchWorkflowRunCreateResponse other) {
        return success == other.success && batchId.equals(other.batchId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.success, this.batchId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SuccessStage builder() {
        return new Builder();
    }

    public interface SuccessStage {
        /**
         * <p>Indicates whether the batch request was successfully accepted and queued. <code>true</code> signifies success.</p>
         */
        BatchIdStage success(boolean success);

        Builder from(BatchWorkflowRunCreateResponse other);
    }

    public interface BatchIdStage {
        /**
         * <p>A unique identifier for the submitted batch. This ID can be used to correlate the workflow runs created by this request. You can find this <code>batchId</code> associated with individual runs when listing workflow runs or in webhook payloads.</p>
         */
        _FinalStage batchId(@NotNull String batchId);
    }

    public interface _FinalStage {
        BatchWorkflowRunCreateResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SuccessStage, BatchIdStage, _FinalStage {
        private boolean success;

        private String batchId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BatchWorkflowRunCreateResponse other) {
            success(other.getSuccess());
            batchId(other.getBatchId());
            return this;
        }

        /**
         * <p>Indicates whether the batch request was successfully accepted and queued. <code>true</code> signifies success.</p>
         * <p>Indicates whether the batch request was successfully accepted and queued. <code>true</code> signifies success.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("success")
        public BatchIdStage success(boolean success) {
            this.success = success;
            return this;
        }

        /**
         * <p>A unique identifier for the submitted batch. This ID can be used to correlate the workflow runs created by this request. You can find this <code>batchId</code> associated with individual runs when listing workflow runs or in webhook payloads.</p>
         * <p>A unique identifier for the submitted batch. This ID can be used to correlate the workflow runs created by this request. You can find this <code>batchId</code> associated with individual runs when listing workflow runs or in webhook payloads.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("batchId")
        public _FinalStage batchId(@NotNull String batchId) {
            this.batchId = Objects.requireNonNull(batchId, "batchId must not be null");
            return this;
        }

        @java.lang.Override
        public BatchWorkflowRunCreateResponse build() {
            return new BatchWorkflowRunCreateResponse(success, batchId, additionalProperties);
        }
    }
}
