/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.evaluationsetitem.requests;

import ai.extend.core.ObjectMappers;
import ai.extend.types.ProvidedProcessorOutput;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = EvaluationSetItemUpdateRequest.Builder.class)
public final class EvaluationSetItemUpdateRequest {
    private final ProvidedProcessorOutput expectedOutput;

    private final Map<String, Object> additionalProperties;

    private EvaluationSetItemUpdateRequest(
            ProvidedProcessorOutput expectedOutput, Map<String, Object> additionalProperties) {
        this.expectedOutput = expectedOutput;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The expected output of the processor when run against the file
     */
    @JsonProperty("expectedOutput")
    public ProvidedProcessorOutput getExpectedOutput() {
        return expectedOutput;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EvaluationSetItemUpdateRequest && equalTo((EvaluationSetItemUpdateRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EvaluationSetItemUpdateRequest other) {
        return expectedOutput.equals(other.expectedOutput);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.expectedOutput);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ExpectedOutputStage builder() {
        return new Builder();
    }

    public interface ExpectedOutputStage {
        /**
         * <p>The expected output of the processor when run against the file</p>
         */
        _FinalStage expectedOutput(@NotNull ProvidedProcessorOutput expectedOutput);

        Builder from(EvaluationSetItemUpdateRequest other);
    }

    public interface _FinalStage {
        EvaluationSetItemUpdateRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ExpectedOutputStage, _FinalStage {
        private ProvidedProcessorOutput expectedOutput;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EvaluationSetItemUpdateRequest other) {
            expectedOutput(other.getExpectedOutput());
            return this;
        }

        /**
         * <p>The expected output of the processor when run against the file</p>
         * <p>The expected output of the processor when run against the file</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("expectedOutput")
        public _FinalStage expectedOutput(@NotNull ProvidedProcessorOutput expectedOutput) {
            this.expectedOutput = Objects.requireNonNull(expectedOutput, "expectedOutput must not be null");
            return this;
        }

        @java.lang.Override
        public EvaluationSetItemUpdateRequest build() {
            return new EvaluationSetItemUpdateRequest(expectedOutput, additionalProperties);
        }
    }
}
