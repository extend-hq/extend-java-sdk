/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.evaluationsetitem.requests;

import ai.extend.core.ObjectMappers;
import ai.extend.resources.evaluationsetitem.types.EvaluationSetItemCreateBatchRequestItemsItem;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = EvaluationSetItemCreateBatchRequest.Builder.class)
public final class EvaluationSetItemCreateBatchRequest {
    private final String evaluationSetId;

    private final List<EvaluationSetItemCreateBatchRequestItemsItem> items;

    private final Map<String, Object> additionalProperties;

    private EvaluationSetItemCreateBatchRequest(
            String evaluationSetId,
            List<EvaluationSetItemCreateBatchRequestItemsItem> items,
            Map<String, Object> additionalProperties) {
        this.evaluationSetId = evaluationSetId;
        this.items = items;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the evaluation set to add the items to.
     * <p>Example: <code>&quot;ev_2LcgeY_mp2T5yPaEuq5Lw&quot;</code></p>
     */
    @JsonProperty("evaluationSetId")
    public String getEvaluationSetId() {
        return evaluationSetId;
    }

    /**
     * @return An array of objects representing the evaluation set items to create
     */
    @JsonProperty("items")
    public List<EvaluationSetItemCreateBatchRequestItemsItem> getItems() {
        return items;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EvaluationSetItemCreateBatchRequest
                && equalTo((EvaluationSetItemCreateBatchRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EvaluationSetItemCreateBatchRequest other) {
        return evaluationSetId.equals(other.evaluationSetId) && items.equals(other.items);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.evaluationSetId, this.items);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EvaluationSetIdStage builder() {
        return new Builder();
    }

    public interface EvaluationSetIdStage {
        /**
         * <p>The ID of the evaluation set to add the items to.</p>
         * <p>Example: <code>&quot;ev_2LcgeY_mp2T5yPaEuq5Lw&quot;</code></p>
         */
        _FinalStage evaluationSetId(@NotNull String evaluationSetId);

        Builder from(EvaluationSetItemCreateBatchRequest other);
    }

    public interface _FinalStage {
        EvaluationSetItemCreateBatchRequest build();

        /**
         * <p>An array of objects representing the evaluation set items to create</p>
         */
        _FinalStage items(List<EvaluationSetItemCreateBatchRequestItemsItem> items);

        _FinalStage addItems(EvaluationSetItemCreateBatchRequestItemsItem items);

        _FinalStage addAllItems(List<EvaluationSetItemCreateBatchRequestItemsItem> items);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements EvaluationSetIdStage, _FinalStage {
        private String evaluationSetId;

        private List<EvaluationSetItemCreateBatchRequestItemsItem> items = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EvaluationSetItemCreateBatchRequest other) {
            evaluationSetId(other.getEvaluationSetId());
            items(other.getItems());
            return this;
        }

        /**
         * <p>The ID of the evaluation set to add the items to.</p>
         * <p>Example: <code>&quot;ev_2LcgeY_mp2T5yPaEuq5Lw&quot;</code></p>
         * <p>The ID of the evaluation set to add the items to.</p>
         * <p>Example: <code>&quot;ev_2LcgeY_mp2T5yPaEuq5Lw&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("evaluationSetId")
        public _FinalStage evaluationSetId(@NotNull String evaluationSetId) {
            this.evaluationSetId = Objects.requireNonNull(evaluationSetId, "evaluationSetId must not be null");
            return this;
        }

        /**
         * <p>An array of objects representing the evaluation set items to create</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllItems(List<EvaluationSetItemCreateBatchRequestItemsItem> items) {
            this.items.addAll(items);
            return this;
        }

        /**
         * <p>An array of objects representing the evaluation set items to create</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addItems(EvaluationSetItemCreateBatchRequestItemsItem items) {
            this.items.add(items);
            return this;
        }

        /**
         * <p>An array of objects representing the evaluation set items to create</p>
         */
        @java.lang.Override
        @JsonSetter(value = "items", nulls = Nulls.SKIP)
        public _FinalStage items(List<EvaluationSetItemCreateBatchRequestItemsItem> items) {
            this.items.clear();
            this.items.addAll(items);
            return this;
        }

        @java.lang.Override
        public EvaluationSetItemCreateBatchRequest build() {
            return new EvaluationSetItemCreateBatchRequest(evaluationSetId, items, additionalProperties);
        }
    }
}
