/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.evaluationsetitem.types;

import ai.extend.core.ObjectMappers;
import ai.extend.types.EvaluationSetItem;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = EvaluationSetItemCreateBatchResponse.Builder.class)
public final class EvaluationSetItemCreateBatchResponse {
    private final boolean success;

    private final List<EvaluationSetItem> evaluationSetItems;

    private final Map<String, Object> additionalProperties;

    private EvaluationSetItemCreateBatchResponse(
            boolean success, List<EvaluationSetItem> evaluationSetItems, Map<String, Object> additionalProperties) {
        this.success = success;
        this.evaluationSetItems = evaluationSetItems;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("success")
    public boolean getSuccess() {
        return success;
    }

    @JsonProperty("evaluationSetItems")
    public List<EvaluationSetItem> getEvaluationSetItems() {
        return evaluationSetItems;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EvaluationSetItemCreateBatchResponse
                && equalTo((EvaluationSetItemCreateBatchResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EvaluationSetItemCreateBatchResponse other) {
        return success == other.success && evaluationSetItems.equals(other.evaluationSetItems);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.success, this.evaluationSetItems);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SuccessStage builder() {
        return new Builder();
    }

    public interface SuccessStage {
        _FinalStage success(boolean success);

        Builder from(EvaluationSetItemCreateBatchResponse other);
    }

    public interface _FinalStage {
        EvaluationSetItemCreateBatchResponse build();

        _FinalStage evaluationSetItems(List<EvaluationSetItem> evaluationSetItems);

        _FinalStage addEvaluationSetItems(EvaluationSetItem evaluationSetItems);

        _FinalStage addAllEvaluationSetItems(List<EvaluationSetItem> evaluationSetItems);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SuccessStage, _FinalStage {
        private boolean success;

        private List<EvaluationSetItem> evaluationSetItems = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EvaluationSetItemCreateBatchResponse other) {
            success(other.getSuccess());
            evaluationSetItems(other.getEvaluationSetItems());
            return this;
        }

        @java.lang.Override
        @JsonSetter("success")
        public _FinalStage success(boolean success) {
            this.success = success;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllEvaluationSetItems(List<EvaluationSetItem> evaluationSetItems) {
            this.evaluationSetItems.addAll(evaluationSetItems);
            return this;
        }

        @java.lang.Override
        public _FinalStage addEvaluationSetItems(EvaluationSetItem evaluationSetItems) {
            this.evaluationSetItems.add(evaluationSetItems);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "evaluationSetItems", nulls = Nulls.SKIP)
        public _FinalStage evaluationSetItems(List<EvaluationSetItem> evaluationSetItems) {
            this.evaluationSetItems.clear();
            this.evaluationSetItems.addAll(evaluationSetItems);
            return this;
        }

        @java.lang.Override
        public EvaluationSetItemCreateBatchResponse build() {
            return new EvaluationSetItemCreateBatchResponse(success, evaluationSetItems, additionalProperties);
        }
    }
}
