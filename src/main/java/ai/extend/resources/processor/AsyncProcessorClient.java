/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.processor;

import ai.extend.core.ClientOptions;
import ai.extend.core.RequestOptions;
import ai.extend.resources.processor.requests.ProcessorCreateRequest;
import ai.extend.resources.processor.requests.ProcessorUpdateRequest;
import ai.extend.resources.processor.types.ProcessorCreateResponse;
import ai.extend.resources.processor.types.ProcessorUpdateResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncProcessorClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawProcessorClient rawClient;

    public AsyncProcessorClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawProcessorClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawProcessorClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Create a new processor in Extend, optionally cloning from an existing processor
     */
    public CompletableFuture<ProcessorCreateResponse> create(ProcessorCreateRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Create a new processor in Extend, optionally cloning from an existing processor
     */
    public CompletableFuture<ProcessorCreateResponse> create(
            ProcessorCreateRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Update an existing processor in Extend
     */
    public CompletableFuture<ProcessorUpdateResponse> update(String id) {
        return this.rawClient.update(id).thenApply(response -> response.body());
    }

    /**
     * Update an existing processor in Extend
     */
    public CompletableFuture<ProcessorUpdateResponse> update(String id, ProcessorUpdateRequest request) {
        return this.rawClient.update(id, request).thenApply(response -> response.body());
    }

    /**
     * Update an existing processor in Extend
     */
    public CompletableFuture<ProcessorUpdateResponse> update(
            String id, ProcessorUpdateRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(id, request, requestOptions).thenApply(response -> response.body());
    }
}
