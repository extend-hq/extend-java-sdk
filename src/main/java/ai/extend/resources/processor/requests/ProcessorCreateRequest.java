/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.processor.requests;

import ai.extend.core.ObjectMappers;
import ai.extend.resources.processor.types.ProcessorCreateRequestConfig;
import ai.extend.types.ProcessorType;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ProcessorCreateRequest.Builder.class)
public final class ProcessorCreateRequest {
    private final String name;

    private final ProcessorType type;

    private final Optional<String> cloneProcessorId;

    private final Optional<ProcessorCreateRequestConfig> config;

    private final Map<String, Object> additionalProperties;

    private ProcessorCreateRequest(
            String name,
            ProcessorType type,
            Optional<String> cloneProcessorId,
            Optional<ProcessorCreateRequestConfig> config,
            Map<String, Object> additionalProperties) {
        this.name = name;
        this.type = type;
        this.cloneProcessorId = cloneProcessorId;
        this.config = config;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The name of the new processor
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("type")
    public ProcessorType getType() {
        return type;
    }

    /**
     * @return The ID of an existing processor to clone. One of <code>cloneProcessorId</code> or <code>config</code> must be provided.
     * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
     */
    @JsonProperty("cloneProcessorId")
    public Optional<String> getCloneProcessorId() {
        return cloneProcessorId;
    }

    /**
     * @return The configuration for the processor. The type of configuration must match the processor type. One of <code>cloneProcessorId</code> or <code>config</code> must be provided.
     */
    @JsonProperty("config")
    public Optional<ProcessorCreateRequestConfig> getConfig() {
        return config;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ProcessorCreateRequest && equalTo((ProcessorCreateRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ProcessorCreateRequest other) {
        return name.equals(other.name)
                && type.equals(other.type)
                && cloneProcessorId.equals(other.cloneProcessorId)
                && config.equals(other.config);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.name, this.type, this.cloneProcessorId, this.config);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        /**
         * <p>The name of the new processor</p>
         */
        TypeStage name(@NotNull String name);

        Builder from(ProcessorCreateRequest other);
    }

    public interface TypeStage {
        _FinalStage type(@NotNull ProcessorType type);
    }

    public interface _FinalStage {
        ProcessorCreateRequest build();

        /**
         * <p>The ID of an existing processor to clone. One of <code>cloneProcessorId</code> or <code>config</code> must be provided.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         */
        _FinalStage cloneProcessorId(Optional<String> cloneProcessorId);

        _FinalStage cloneProcessorId(String cloneProcessorId);

        /**
         * <p>The configuration for the processor. The type of configuration must match the processor type. One of <code>cloneProcessorId</code> or <code>config</code> must be provided.</p>
         */
        _FinalStage config(Optional<ProcessorCreateRequestConfig> config);

        _FinalStage config(ProcessorCreateRequestConfig config);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, TypeStage, _FinalStage {
        private String name;

        private ProcessorType type;

        private Optional<ProcessorCreateRequestConfig> config = Optional.empty();

        private Optional<String> cloneProcessorId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ProcessorCreateRequest other) {
            name(other.getName());
            type(other.getType());
            cloneProcessorId(other.getCloneProcessorId());
            config(other.getConfig());
            return this;
        }

        /**
         * <p>The name of the new processor</p>
         * <p>The name of the new processor</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public TypeStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("type")
        public _FinalStage type(@NotNull ProcessorType type) {
            this.type = Objects.requireNonNull(type, "type must not be null");
            return this;
        }

        /**
         * <p>The configuration for the processor. The type of configuration must match the processor type. One of <code>cloneProcessorId</code> or <code>config</code> must be provided.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage config(ProcessorCreateRequestConfig config) {
            this.config = Optional.ofNullable(config);
            return this;
        }

        /**
         * <p>The configuration for the processor. The type of configuration must match the processor type. One of <code>cloneProcessorId</code> or <code>config</code> must be provided.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "config", nulls = Nulls.SKIP)
        public _FinalStage config(Optional<ProcessorCreateRequestConfig> config) {
            this.config = config;
            return this;
        }

        /**
         * <p>The ID of an existing processor to clone. One of <code>cloneProcessorId</code> or <code>config</code> must be provided.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage cloneProcessorId(String cloneProcessorId) {
            this.cloneProcessorId = Optional.ofNullable(cloneProcessorId);
            return this;
        }

        /**
         * <p>The ID of an existing processor to clone. One of <code>cloneProcessorId</code> or <code>config</code> must be provided.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "cloneProcessorId", nulls = Nulls.SKIP)
        public _FinalStage cloneProcessorId(Optional<String> cloneProcessorId) {
            this.cloneProcessorId = cloneProcessorId;
            return this;
        }

        @java.lang.Override
        public ProcessorCreateRequest build() {
            return new ProcessorCreateRequest(name, type, cloneProcessorId, config, additionalProperties);
        }
    }
}
