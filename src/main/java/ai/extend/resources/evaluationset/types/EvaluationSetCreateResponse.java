/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.resources.evaluationset.types;

import ai.extend.core.ObjectMappers;
import ai.extend.types.EvaluationSet;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = EvaluationSetCreateResponse.Builder.class)
public final class EvaluationSetCreateResponse {
    private final boolean success;

    private final EvaluationSet evaluationSet;

    private final Map<String, Object> additionalProperties;

    private EvaluationSetCreateResponse(
            boolean success, EvaluationSet evaluationSet, Map<String, Object> additionalProperties) {
        this.success = success;
        this.evaluationSet = evaluationSet;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("success")
    public boolean getSuccess() {
        return success;
    }

    @JsonProperty("evaluationSet")
    public EvaluationSet getEvaluationSet() {
        return evaluationSet;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EvaluationSetCreateResponse && equalTo((EvaluationSetCreateResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EvaluationSetCreateResponse other) {
        return success == other.success && evaluationSet.equals(other.evaluationSet);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.success, this.evaluationSet);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SuccessStage builder() {
        return new Builder();
    }

    public interface SuccessStage {
        EvaluationSetStage success(boolean success);

        Builder from(EvaluationSetCreateResponse other);
    }

    public interface EvaluationSetStage {
        _FinalStage evaluationSet(@NotNull EvaluationSet evaluationSet);
    }

    public interface _FinalStage {
        EvaluationSetCreateResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SuccessStage, EvaluationSetStage, _FinalStage {
        private boolean success;

        private EvaluationSet evaluationSet;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EvaluationSetCreateResponse other) {
            success(other.getSuccess());
            evaluationSet(other.getEvaluationSet());
            return this;
        }

        @java.lang.Override
        @JsonSetter("success")
        public EvaluationSetStage success(boolean success) {
            this.success = success;
            return this;
        }

        @java.lang.Override
        @JsonSetter("evaluationSet")
        public _FinalStage evaluationSet(@NotNull EvaluationSet evaluationSet) {
            this.evaluationSet = Objects.requireNonNull(evaluationSet, "evaluationSet must not be null");
            return this;
        }

        @java.lang.Override
        public EvaluationSetCreateResponse build() {
            return new EvaluationSetCreateResponse(success, evaluationSet, additionalProperties);
        }
    }
}
