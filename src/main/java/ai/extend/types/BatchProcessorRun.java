/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BatchProcessorRun.Builder.class)
public final class BatchProcessorRun {
    private final String object;

    private final String id;

    private final String processorId;

    private final String processorVersionId;

    private final String processorName;

    private final BatchProcessorRunMetrics metrics;

    private final BatchProcessorRunStatus status;

    private final BatchProcessorRunSource source;

    private final Optional<String> sourceId;

    private final int runCount;

    private final BatchProcessorRunOptions options;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final Map<String, Object> additionalProperties;

    private BatchProcessorRun(
            String object,
            String id,
            String processorId,
            String processorVersionId,
            String processorName,
            BatchProcessorRunMetrics metrics,
            BatchProcessorRunStatus status,
            BatchProcessorRunSource source,
            Optional<String> sourceId,
            int runCount,
            BatchProcessorRunOptions options,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Map<String, Object> additionalProperties) {
        this.object = object;
        this.id = id;
        this.processorId = processorId;
        this.processorVersionId = processorVersionId;
        this.processorName = processorName;
        this.metrics = metrics;
        this.status = status;
        this.source = source;
        this.sourceId = sourceId;
        this.runCount = runCount;
        this.options = options;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The type of response. In this case, it will always be <code>&quot;batch_processor_run&quot;</code>.
     */
    @JsonProperty("object")
    public String getObject() {
        return object;
    }

    /**
     * @return The unique identifier for this batch processor run.
     * <p>Example: <code>&quot;batch_processor_run_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The ID of the processor used for this run.
     * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
     */
    @JsonProperty("processorId")
    public String getProcessorId() {
        return processorId;
    }

    /**
     * @return The ID of the specific processor version used.
     * <p>Example: <code>&quot;dpv_xK9mLPqRtN3vS8wF5hB2cQ&quot;</code></p>
     */
    @JsonProperty("processorVersionId")
    public String getProcessorVersionId() {
        return processorVersionId;
    }

    /**
     * @return The name of the processor.
     * <p>Example: <code>&quot;Invoice Processor&quot;</code></p>
     */
    @JsonProperty("processorName")
    public String getProcessorName() {
        return processorName;
    }

    @JsonProperty("metrics")
    public BatchProcessorRunMetrics getMetrics() {
        return metrics;
    }

    /**
     * @return The current status of the batch processor run:
     * <ul>
     * <li><code>&quot;PENDING&quot;</code> - The batch processor run is waiting to start</li>
     * <li><code>&quot;PROCESSING&quot;</code> - The batch processor run is in progress</li>
     * <li><code>&quot;PROCESSED&quot;</code> - The batch processor run completed successfully</li>
     * <li><code>&quot;FAILED&quot;</code> - The batch processor run encountered an error</li>
     * </ul>
     */
    @JsonProperty("status")
    public BatchProcessorRunStatus getStatus() {
        return status;
    }

    /**
     * @return The source of the batch processor run:
     * <ul>
     * <li><code>&quot;EVAL_SET&quot;</code> - The batch processor run was made from an evaluation set. The <code>sourceId</code> will be the ID of the evaluation set (e.g., <code>&quot;ev_1234&quot;</code>)</li>
     * <li><code>&quot;PLAYGROUND&quot;</code> - The batch processor run was made from the playground. The <code>sourceId</code> will not be set</li>
     * <li><code>&quot;STUDIO&quot;</code> - The batch processor run was made for a processor in Studio. The <code>sourceId</code> will be the ID of the processor (e.g., <code>&quot;dp_1234&quot;</code>)</li>
     * </ul>
     */
    @JsonProperty("source")
    public BatchProcessorRunSource getSource() {
        return source;
    }

    /**
     * @return The ID of the source of the batch processor run. See the <code>source</code> field for more details.
     * Example: <code>&quot;ev_1234&quot;</code> for EVAL_SET source, <code>&quot;dp_1234&quot;</code> for STUDIO source
     */
    @JsonProperty("sourceId")
    public Optional<String> getSourceId() {
        return sourceId;
    }

    /**
     * @return The number of runs that were made.
     */
    @JsonProperty("runCount")
    public int getRunCount() {
        return runCount;
    }

    /**
     * @return The options for the batch processor run.
     */
    @JsonProperty("options")
    public BatchProcessorRunOptions getOptions() {
        return options;
    }

    /**
     * @return The time (in UTC) at which the batch processor run was created. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
     */
    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The time (in UTC) at which the batch processor run was last updated. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
     */
    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BatchProcessorRun && equalTo((BatchProcessorRun) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BatchProcessorRun other) {
        return object.equals(other.object)
                && id.equals(other.id)
                && processorId.equals(other.processorId)
                && processorVersionId.equals(other.processorVersionId)
                && processorName.equals(other.processorName)
                && metrics.equals(other.metrics)
                && status.equals(other.status)
                && source.equals(other.source)
                && sourceId.equals(other.sourceId)
                && runCount == other.runCount
                && options.equals(other.options)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.object,
                this.id,
                this.processorId,
                this.processorVersionId,
                this.processorName,
                this.metrics,
                this.status,
                this.source,
                this.sourceId,
                this.runCount,
                this.options,
                this.createdAt,
                this.updatedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ObjectStage builder() {
        return new Builder();
    }

    public interface ObjectStage {
        /**
         * <p>The type of response. In this case, it will always be <code>&quot;batch_processor_run&quot;</code>.</p>
         */
        IdStage object(@NotNull String object);

        Builder from(BatchProcessorRun other);
    }

    public interface IdStage {
        /**
         * <p>The unique identifier for this batch processor run.</p>
         * <p>Example: <code>&quot;batch_processor_run_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         */
        ProcessorIdStage id(@NotNull String id);
    }

    public interface ProcessorIdStage {
        /**
         * <p>The ID of the processor used for this run.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         */
        ProcessorVersionIdStage processorId(@NotNull String processorId);
    }

    public interface ProcessorVersionIdStage {
        /**
         * <p>The ID of the specific processor version used.</p>
         * <p>Example: <code>&quot;dpv_xK9mLPqRtN3vS8wF5hB2cQ&quot;</code></p>
         */
        ProcessorNameStage processorVersionId(@NotNull String processorVersionId);
    }

    public interface ProcessorNameStage {
        /**
         * <p>The name of the processor.</p>
         * <p>Example: <code>&quot;Invoice Processor&quot;</code></p>
         */
        MetricsStage processorName(@NotNull String processorName);
    }

    public interface MetricsStage {
        StatusStage metrics(@NotNull BatchProcessorRunMetrics metrics);
    }

    public interface StatusStage {
        /**
         * <p>The current status of the batch processor run:</p>
         * <ul>
         * <li><code>&quot;PENDING&quot;</code> - The batch processor run is waiting to start</li>
         * <li><code>&quot;PROCESSING&quot;</code> - The batch processor run is in progress</li>
         * <li><code>&quot;PROCESSED&quot;</code> - The batch processor run completed successfully</li>
         * <li><code>&quot;FAILED&quot;</code> - The batch processor run encountered an error</li>
         * </ul>
         */
        SourceStage status(@NotNull BatchProcessorRunStatus status);
    }

    public interface SourceStage {
        /**
         * <p>The source of the batch processor run:</p>
         * <ul>
         * <li><code>&quot;EVAL_SET&quot;</code> - The batch processor run was made from an evaluation set. The <code>sourceId</code> will be the ID of the evaluation set (e.g., <code>&quot;ev_1234&quot;</code>)</li>
         * <li><code>&quot;PLAYGROUND&quot;</code> - The batch processor run was made from the playground. The <code>sourceId</code> will not be set</li>
         * <li><code>&quot;STUDIO&quot;</code> - The batch processor run was made for a processor in Studio. The <code>sourceId</code> will be the ID of the processor (e.g., <code>&quot;dp_1234&quot;</code>)</li>
         * </ul>
         */
        RunCountStage source(@NotNull BatchProcessorRunSource source);
    }

    public interface RunCountStage {
        /**
         * <p>The number of runs that were made.</p>
         */
        OptionsStage runCount(int runCount);
    }

    public interface OptionsStage {
        /**
         * <p>The options for the batch processor run.</p>
         */
        CreatedAtStage options(@NotNull BatchProcessorRunOptions options);
    }

    public interface CreatedAtStage {
        /**
         * <p>The time (in UTC) at which the batch processor run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         */
        UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        /**
         * <p>The time (in UTC) at which the batch processor run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         */
        _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        BatchProcessorRun build();

        /**
         * <p>The ID of the source of the batch processor run. See the <code>source</code> field for more details.
         * Example: <code>&quot;ev_1234&quot;</code> for EVAL_SET source, <code>&quot;dp_1234&quot;</code> for STUDIO source</p>
         */
        _FinalStage sourceId(Optional<String> sourceId);

        _FinalStage sourceId(String sourceId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ObjectStage,
                    IdStage,
                    ProcessorIdStage,
                    ProcessorVersionIdStage,
                    ProcessorNameStage,
                    MetricsStage,
                    StatusStage,
                    SourceStage,
                    RunCountStage,
                    OptionsStage,
                    CreatedAtStage,
                    UpdatedAtStage,
                    _FinalStage {
        private String object;

        private String id;

        private String processorId;

        private String processorVersionId;

        private String processorName;

        private BatchProcessorRunMetrics metrics;

        private BatchProcessorRunStatus status;

        private BatchProcessorRunSource source;

        private int runCount;

        private BatchProcessorRunOptions options;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private Optional<String> sourceId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BatchProcessorRun other) {
            object(other.getObject());
            id(other.getId());
            processorId(other.getProcessorId());
            processorVersionId(other.getProcessorVersionId());
            processorName(other.getProcessorName());
            metrics(other.getMetrics());
            status(other.getStatus());
            source(other.getSource());
            sourceId(other.getSourceId());
            runCount(other.getRunCount());
            options(other.getOptions());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            return this;
        }

        /**
         * <p>The type of response. In this case, it will always be <code>&quot;batch_processor_run&quot;</code>.</p>
         * <p>The type of response. In this case, it will always be <code>&quot;batch_processor_run&quot;</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("object")
        public IdStage object(@NotNull String object) {
            this.object = Objects.requireNonNull(object, "object must not be null");
            return this;
        }

        /**
         * <p>The unique identifier for this batch processor run.</p>
         * <p>Example: <code>&quot;batch_processor_run_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * <p>The unique identifier for this batch processor run.</p>
         * <p>Example: <code>&quot;batch_processor_run_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public ProcessorIdStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The ID of the processor used for this run.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * <p>The ID of the processor used for this run.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processorId")
        public ProcessorVersionIdStage processorId(@NotNull String processorId) {
            this.processorId = Objects.requireNonNull(processorId, "processorId must not be null");
            return this;
        }

        /**
         * <p>The ID of the specific processor version used.</p>
         * <p>Example: <code>&quot;dpv_xK9mLPqRtN3vS8wF5hB2cQ&quot;</code></p>
         * <p>The ID of the specific processor version used.</p>
         * <p>Example: <code>&quot;dpv_xK9mLPqRtN3vS8wF5hB2cQ&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processorVersionId")
        public ProcessorNameStage processorVersionId(@NotNull String processorVersionId) {
            this.processorVersionId = Objects.requireNonNull(processorVersionId, "processorVersionId must not be null");
            return this;
        }

        /**
         * <p>The name of the processor.</p>
         * <p>Example: <code>&quot;Invoice Processor&quot;</code></p>
         * <p>The name of the processor.</p>
         * <p>Example: <code>&quot;Invoice Processor&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processorName")
        public MetricsStage processorName(@NotNull String processorName) {
            this.processorName = Objects.requireNonNull(processorName, "processorName must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("metrics")
        public StatusStage metrics(@NotNull BatchProcessorRunMetrics metrics) {
            this.metrics = Objects.requireNonNull(metrics, "metrics must not be null");
            return this;
        }

        /**
         * <p>The current status of the batch processor run:</p>
         * <ul>
         * <li><code>&quot;PENDING&quot;</code> - The batch processor run is waiting to start</li>
         * <li><code>&quot;PROCESSING&quot;</code> - The batch processor run is in progress</li>
         * <li><code>&quot;PROCESSED&quot;</code> - The batch processor run completed successfully</li>
         * <li><code>&quot;FAILED&quot;</code> - The batch processor run encountered an error</li>
         * </ul>
         * <p>The current status of the batch processor run:</p>
         * <ul>
         * <li><code>&quot;PENDING&quot;</code> - The batch processor run is waiting to start</li>
         * <li><code>&quot;PROCESSING&quot;</code> - The batch processor run is in progress</li>
         * <li><code>&quot;PROCESSED&quot;</code> - The batch processor run completed successfully</li>
         * <li><code>&quot;FAILED&quot;</code> - The batch processor run encountered an error</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("status")
        public SourceStage status(@NotNull BatchProcessorRunStatus status) {
            this.status = Objects.requireNonNull(status, "status must not be null");
            return this;
        }

        /**
         * <p>The source of the batch processor run:</p>
         * <ul>
         * <li><code>&quot;EVAL_SET&quot;</code> - The batch processor run was made from an evaluation set. The <code>sourceId</code> will be the ID of the evaluation set (e.g., <code>&quot;ev_1234&quot;</code>)</li>
         * <li><code>&quot;PLAYGROUND&quot;</code> - The batch processor run was made from the playground. The <code>sourceId</code> will not be set</li>
         * <li><code>&quot;STUDIO&quot;</code> - The batch processor run was made for a processor in Studio. The <code>sourceId</code> will be the ID of the processor (e.g., <code>&quot;dp_1234&quot;</code>)</li>
         * </ul>
         * <p>The source of the batch processor run:</p>
         * <ul>
         * <li><code>&quot;EVAL_SET&quot;</code> - The batch processor run was made from an evaluation set. The <code>sourceId</code> will be the ID of the evaluation set (e.g., <code>&quot;ev_1234&quot;</code>)</li>
         * <li><code>&quot;PLAYGROUND&quot;</code> - The batch processor run was made from the playground. The <code>sourceId</code> will not be set</li>
         * <li><code>&quot;STUDIO&quot;</code> - The batch processor run was made for a processor in Studio. The <code>sourceId</code> will be the ID of the processor (e.g., <code>&quot;dp_1234&quot;</code>)</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("source")
        public RunCountStage source(@NotNull BatchProcessorRunSource source) {
            this.source = Objects.requireNonNull(source, "source must not be null");
            return this;
        }

        /**
         * <p>The number of runs that were made.</p>
         * <p>The number of runs that were made.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("runCount")
        public OptionsStage runCount(int runCount) {
            this.runCount = runCount;
            return this;
        }

        /**
         * <p>The options for the batch processor run.</p>
         * <p>The options for the batch processor run.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("options")
        public CreatedAtStage options(@NotNull BatchProcessorRunOptions options) {
            this.options = Objects.requireNonNull(options, "options must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the batch processor run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         * <p>The time (in UTC) at which the batch processor run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the batch processor run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * <p>The time (in UTC) at which the batch processor run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updatedAt")
        public _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
            return this;
        }

        /**
         * <p>The ID of the source of the batch processor run. See the <code>source</code> field for more details.
         * Example: <code>&quot;ev_1234&quot;</code> for EVAL_SET source, <code>&quot;dp_1234&quot;</code> for STUDIO source</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage sourceId(String sourceId) {
            this.sourceId = Optional.ofNullable(sourceId);
            return this;
        }

        /**
         * <p>The ID of the source of the batch processor run. See the <code>source</code> field for more details.
         * Example: <code>&quot;ev_1234&quot;</code> for EVAL_SET source, <code>&quot;dp_1234&quot;</code> for STUDIO source</p>
         */
        @java.lang.Override
        @JsonSetter(value = "sourceId", nulls = Nulls.SKIP)
        public _FinalStage sourceId(Optional<String> sourceId) {
            this.sourceId = sourceId;
            return this;
        }

        @java.lang.Override
        public BatchProcessorRun build() {
            return new BatchProcessorRun(
                    object,
                    id,
                    processorId,
                    processorVersionId,
                    processorName,
                    metrics,
                    status,
                    source,
                    sourceId,
                    runCount,
                    options,
                    createdAt,
                    updatedAt,
                    additionalProperties);
        }
    }
}
