/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = EvaluationSetItem.Builder.class)
public final class EvaluationSetItem {
    private final String object;

    private final String id;

    private final String evaluationSetId;

    private final String fileId;

    private final ProvidedProcessorOutput expectedOutput;

    private final Map<String, Object> additionalProperties;

    private EvaluationSetItem(
            String object,
            String id,
            String evaluationSetId,
            String fileId,
            ProvidedProcessorOutput expectedOutput,
            Map<String, Object> additionalProperties) {
        this.object = object;
        this.id = id;
        this.evaluationSetId = evaluationSetId;
        this.fileId = fileId;
        this.expectedOutput = expectedOutput;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The type of response. In this case, it will always be <code>&quot;evaluation_set_item&quot;</code>.
     */
    @JsonProperty("object")
    public String getObject() {
        return object;
    }

    /**
     * @return The ID of the evaluation set item.
     * <p>Example: <code>&quot;evi_kR9mNP12Qw4yTv8BdR3H&quot;</code></p>
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The ID of the evaluation set that this item belongs to.
     * <p>Example: <code>&quot;ev_2LcgeY_mp2T5yPaEuq5Lw&quot;</code></p>
     */
    @JsonProperty("evaluationSetId")
    public String getEvaluationSetId() {
        return evaluationSetId;
    }

    /**
     * @return Extend's internal ID for the file. It will always start with &quot;file_&quot;.
     * <p>Example: <code>&quot;file_xK9mLPqRtN3vS8wF5hB2cQ&quot;</code></p>
     */
    @JsonProperty("fileId")
    public String getFileId() {
        return fileId;
    }

    /**
     * @return The expected output that will be used to evaluate the processor's performance. This will confirm to the output type schema of the processor.
     */
    @JsonProperty("expectedOutput")
    public ProvidedProcessorOutput getExpectedOutput() {
        return expectedOutput;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EvaluationSetItem && equalTo((EvaluationSetItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EvaluationSetItem other) {
        return object.equals(other.object)
                && id.equals(other.id)
                && evaluationSetId.equals(other.evaluationSetId)
                && fileId.equals(other.fileId)
                && expectedOutput.equals(other.expectedOutput);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.object, this.id, this.evaluationSetId, this.fileId, this.expectedOutput);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ObjectStage builder() {
        return new Builder();
    }

    public interface ObjectStage {
        /**
         * <p>The type of response. In this case, it will always be <code>&quot;evaluation_set_item&quot;</code>.</p>
         */
        IdStage object(@NotNull String object);

        Builder from(EvaluationSetItem other);
    }

    public interface IdStage {
        /**
         * <p>The ID of the evaluation set item.</p>
         * <p>Example: <code>&quot;evi_kR9mNP12Qw4yTv8BdR3H&quot;</code></p>
         */
        EvaluationSetIdStage id(@NotNull String id);
    }

    public interface EvaluationSetIdStage {
        /**
         * <p>The ID of the evaluation set that this item belongs to.</p>
         * <p>Example: <code>&quot;ev_2LcgeY_mp2T5yPaEuq5Lw&quot;</code></p>
         */
        FileIdStage evaluationSetId(@NotNull String evaluationSetId);
    }

    public interface FileIdStage {
        /**
         * <p>Extend's internal ID for the file. It will always start with &quot;file_&quot;.</p>
         * <p>Example: <code>&quot;file_xK9mLPqRtN3vS8wF5hB2cQ&quot;</code></p>
         */
        ExpectedOutputStage fileId(@NotNull String fileId);
    }

    public interface ExpectedOutputStage {
        /**
         * <p>The expected output that will be used to evaluate the processor's performance. This will confirm to the output type schema of the processor.</p>
         */
        _FinalStage expectedOutput(@NotNull ProvidedProcessorOutput expectedOutput);
    }

    public interface _FinalStage {
        EvaluationSetItem build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ObjectStage, IdStage, EvaluationSetIdStage, FileIdStage, ExpectedOutputStage, _FinalStage {
        private String object;

        private String id;

        private String evaluationSetId;

        private String fileId;

        private ProvidedProcessorOutput expectedOutput;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EvaluationSetItem other) {
            object(other.getObject());
            id(other.getId());
            evaluationSetId(other.getEvaluationSetId());
            fileId(other.getFileId());
            expectedOutput(other.getExpectedOutput());
            return this;
        }

        /**
         * <p>The type of response. In this case, it will always be <code>&quot;evaluation_set_item&quot;</code>.</p>
         * <p>The type of response. In this case, it will always be <code>&quot;evaluation_set_item&quot;</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("object")
        public IdStage object(@NotNull String object) {
            this.object = Objects.requireNonNull(object, "object must not be null");
            return this;
        }

        /**
         * <p>The ID of the evaluation set item.</p>
         * <p>Example: <code>&quot;evi_kR9mNP12Qw4yTv8BdR3H&quot;</code></p>
         * <p>The ID of the evaluation set item.</p>
         * <p>Example: <code>&quot;evi_kR9mNP12Qw4yTv8BdR3H&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public EvaluationSetIdStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The ID of the evaluation set that this item belongs to.</p>
         * <p>Example: <code>&quot;ev_2LcgeY_mp2T5yPaEuq5Lw&quot;</code></p>
         * <p>The ID of the evaluation set that this item belongs to.</p>
         * <p>Example: <code>&quot;ev_2LcgeY_mp2T5yPaEuq5Lw&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("evaluationSetId")
        public FileIdStage evaluationSetId(@NotNull String evaluationSetId) {
            this.evaluationSetId = Objects.requireNonNull(evaluationSetId, "evaluationSetId must not be null");
            return this;
        }

        /**
         * <p>Extend's internal ID for the file. It will always start with &quot;file_&quot;.</p>
         * <p>Example: <code>&quot;file_xK9mLPqRtN3vS8wF5hB2cQ&quot;</code></p>
         * <p>Extend's internal ID for the file. It will always start with &quot;file_&quot;.</p>
         * <p>Example: <code>&quot;file_xK9mLPqRtN3vS8wF5hB2cQ&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("fileId")
        public ExpectedOutputStage fileId(@NotNull String fileId) {
            this.fileId = Objects.requireNonNull(fileId, "fileId must not be null");
            return this;
        }

        /**
         * <p>The expected output that will be used to evaluate the processor's performance. This will confirm to the output type schema of the processor.</p>
         * <p>The expected output that will be used to evaluate the processor's performance. This will confirm to the output type schema of the processor.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("expectedOutput")
        public _FinalStage expectedOutput(@NotNull ProvidedProcessorOutput expectedOutput) {
            this.expectedOutput = Objects.requireNonNull(expectedOutput, "expectedOutput must not be null");
            return this;
        }

        @java.lang.Override
        public EvaluationSetItem build() {
            return new EvaluationSetItem(object, id, evaluationSetId, fileId, expectedOutput, additionalProperties);
        }
    }
}
