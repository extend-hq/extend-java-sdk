/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = WorkflowRunFileInputOutputsItem.Builder.class)
public final class WorkflowRunFileInputOutputsItem {
    private final String processorId;

    private final ProvidedProcessorOutput output;

    private final Map<String, Object> additionalProperties;

    private WorkflowRunFileInputOutputsItem(
            String processorId, ProvidedProcessorOutput output, Map<String, Object> additionalProperties) {
        this.processorId = processorId;
        this.output = output;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the processor that the output is associated with.
     * Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code>
     */
    @JsonProperty("processorId")
    public String getProcessorId() {
        return processorId;
    }

    /**
     * @return The output that is being overridden. The structure will depend on the processor type. More details can be found on the &quot;output type&quot; page for the corresponding processor, in the guides section.
     */
    @JsonProperty("output")
    public ProvidedProcessorOutput getOutput() {
        return output;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WorkflowRunFileInputOutputsItem && equalTo((WorkflowRunFileInputOutputsItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WorkflowRunFileInputOutputsItem other) {
        return processorId.equals(other.processorId) && output.equals(other.output);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.processorId, this.output);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProcessorIdStage builder() {
        return new Builder();
    }

    public interface ProcessorIdStage {
        /**
         * <p>The ID of the processor that the output is associated with.
         * Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         */
        OutputStage processorId(@NotNull String processorId);

        Builder from(WorkflowRunFileInputOutputsItem other);
    }

    public interface OutputStage {
        /**
         * <p>The output that is being overridden. The structure will depend on the processor type. More details can be found on the &quot;output type&quot; page for the corresponding processor, in the guides section.</p>
         */
        _FinalStage output(@NotNull ProvidedProcessorOutput output);
    }

    public interface _FinalStage {
        WorkflowRunFileInputOutputsItem build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ProcessorIdStage, OutputStage, _FinalStage {
        private String processorId;

        private ProvidedProcessorOutput output;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WorkflowRunFileInputOutputsItem other) {
            processorId(other.getProcessorId());
            output(other.getOutput());
            return this;
        }

        /**
         * <p>The ID of the processor that the output is associated with.
         * Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * <p>The ID of the processor that the output is associated with.
         * Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processorId")
        public OutputStage processorId(@NotNull String processorId) {
            this.processorId = Objects.requireNonNull(processorId, "processorId must not be null");
            return this;
        }

        /**
         * <p>The output that is being overridden. The structure will depend on the processor type. More details can be found on the &quot;output type&quot; page for the corresponding processor, in the guides section.</p>
         * <p>The output that is being overridden. The structure will depend on the processor type. More details can be found on the &quot;output type&quot; page for the corresponding processor, in the guides section.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("output")
        public _FinalStage output(@NotNull ProvidedProcessorOutput output) {
            this.output = Objects.requireNonNull(output, "output must not be null");
            return this;
        }

        @java.lang.Override
        public WorkflowRunFileInputOutputsItem build() {
            return new WorkflowRunFileInputOutputsItem(processorId, output, additionalProperties);
        }
    }
}
