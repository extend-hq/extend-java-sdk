/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = WorkflowRunSummary.Builder.class)
public final class WorkflowRunSummary {
    private final String id;

    private final WorkflowStatus status;

    private final Optional<OffsetDateTime> initialRunAt;

    private final Optional<String> reviewedByUser;

    private final Optional<OffsetDateTime> reviewedAt;

    private final Optional<OffsetDateTime> startTime;

    private final Optional<OffsetDateTime> endTime;

    private final String workflowId;

    private final String workflowName;

    private final String workflowVersionId;

    private final Optional<String> batchId;

    private final Optional<String> rejectionNote;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final Optional<WorkflowRunCredits> usage;

    private final Map<String, Object> additionalProperties;

    private WorkflowRunSummary(
            String id,
            WorkflowStatus status,
            Optional<OffsetDateTime> initialRunAt,
            Optional<String> reviewedByUser,
            Optional<OffsetDateTime> reviewedAt,
            Optional<OffsetDateTime> startTime,
            Optional<OffsetDateTime> endTime,
            String workflowId,
            String workflowName,
            String workflowVersionId,
            Optional<String> batchId,
            Optional<String> rejectionNote,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Optional<WorkflowRunCredits> usage,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.status = status;
        this.initialRunAt = initialRunAt;
        this.reviewedByUser = reviewedByUser;
        this.reviewedAt = reviewedAt;
        this.startTime = startTime;
        this.endTime = endTime;
        this.workflowId = workflowId;
        this.workflowName = workflowName;
        this.workflowVersionId = workflowVersionId;
        this.batchId = batchId;
        this.rejectionNote = rejectionNote;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.usage = usage;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the workflow run.
     * <p>Example: <code>&quot;workflow_run_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("status")
    public WorkflowStatus getStatus() {
        return status;
    }

    /**
     * @return The time (in UTC) at which the workflow was initially created. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
     */
    @JsonProperty("initialRunAt")
    public Optional<OffsetDateTime> getInitialRunAt() {
        return initialRunAt;
    }

    /**
     * @return The user of the person who reviewed the workflow run. Will not be included if the workflow run has not been reviewed.
     * <p>Example: <code>&quot;jane.doe@example.com&quot;</code></p>
     */
    @JsonProperty("reviewedByUser")
    public Optional<String> getReviewedByUser() {
        return reviewedByUser;
    }

    /**
     * @return The time (in UTC) at which the workflow run was reviewed. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
     */
    @JsonProperty("reviewedAt")
    public Optional<OffsetDateTime> getReviewedAt() {
        return reviewedAt;
    }

    /**
     * @return The start time (in UTC) that the workflow actually started executing. This occurs after the <code>initialRunAt</code> time. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
     */
    @JsonProperty("startTime")
    public Optional<OffsetDateTime> getStartTime() {
        return startTime;
    }

    /**
     * @return The end time (in UTC) that the workflow finished. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T15:35:00Z&quot;</code></p>
     */
    @JsonProperty("endTime")
    public Optional<OffsetDateTime> getEndTime() {
        return endTime;
    }

    /**
     * @return The ID of the workflow that was run. Will always start with &quot;workflow&quot;.
     * <p>Example: <code>&quot;workflow_BMdfq_yWM3sT-ZzvCnA3f&quot;</code></p>
     */
    @JsonProperty("workflowId")
    public String getWorkflowId() {
        return workflowId;
    }

    /**
     * @return The name of the workflow that was run.
     * <p>Example: <code>&quot;Invoice Processing&quot;</code></p>
     */
    @JsonProperty("workflowName")
    public String getWorkflowName() {
        return workflowName;
    }

    /**
     * @return The ID of the workflow version that was run. Will always start with &quot;workflow_version&quot;.
     * <p>Example: <code>&quot;workflow_version_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
     */
    @JsonProperty("workflowVersionId")
    public String getWorkflowVersionId() {
        return workflowVersionId;
    }

    /**
     * @return The batch ID of the WorkflowRun. If that WorkflowRun was created from a batch of files, all runs in that batch will have the same batch ID.
     * <p>Example: <code>&quot;batch_7Ws31-F5&quot;</code></p>
     */
    @JsonProperty("batchId")
    public Optional<String> getBatchId() {
        return batchId;
    }

    /**
     * @return The note that was added when the workflow run was rejected.
     * <p>Example: <code>&quot;Invalid invoice format&quot;</code></p>
     */
    @JsonProperty("rejectionNote")
    public Optional<String> getRejectionNote() {
        return rejectionNote;
    }

    /**
     * @return The time (in UTC) at which the workflow run was created. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T15:29:55Z&quot;</code></p>
     */
    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The time (in UTC) at which the workflow run was last updated. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
     */
    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty("usage")
    public Optional<WorkflowRunCredits> getUsage() {
        return usage;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WorkflowRunSummary && equalTo((WorkflowRunSummary) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WorkflowRunSummary other) {
        return id.equals(other.id)
                && status.equals(other.status)
                && initialRunAt.equals(other.initialRunAt)
                && reviewedByUser.equals(other.reviewedByUser)
                && reviewedAt.equals(other.reviewedAt)
                && startTime.equals(other.startTime)
                && endTime.equals(other.endTime)
                && workflowId.equals(other.workflowId)
                && workflowName.equals(other.workflowName)
                && workflowVersionId.equals(other.workflowVersionId)
                && batchId.equals(other.batchId)
                && rejectionNote.equals(other.rejectionNote)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && usage.equals(other.usage);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.status,
                this.initialRunAt,
                this.reviewedByUser,
                this.reviewedAt,
                this.startTime,
                this.endTime,
                this.workflowId,
                this.workflowName,
                this.workflowVersionId,
                this.batchId,
                this.rejectionNote,
                this.createdAt,
                this.updatedAt,
                this.usage);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>The ID of the workflow run.</p>
         * <p>Example: <code>&quot;workflow_run_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         */
        StatusStage id(@NotNull String id);

        Builder from(WorkflowRunSummary other);
    }

    public interface StatusStage {
        WorkflowIdStage status(@NotNull WorkflowStatus status);
    }

    public interface WorkflowIdStage {
        /**
         * <p>The ID of the workflow that was run. Will always start with &quot;workflow&quot;.</p>
         * <p>Example: <code>&quot;workflow_BMdfq_yWM3sT-ZzvCnA3f&quot;</code></p>
         */
        WorkflowNameStage workflowId(@NotNull String workflowId);
    }

    public interface WorkflowNameStage {
        /**
         * <p>The name of the workflow that was run.</p>
         * <p>Example: <code>&quot;Invoice Processing&quot;</code></p>
         */
        WorkflowVersionIdStage workflowName(@NotNull String workflowName);
    }

    public interface WorkflowVersionIdStage {
        /**
         * <p>The ID of the workflow version that was run. Will always start with &quot;workflow_version&quot;.</p>
         * <p>Example: <code>&quot;workflow_version_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         */
        CreatedAtStage workflowVersionId(@NotNull String workflowVersionId);
    }

    public interface CreatedAtStage {
        /**
         * <p>The time (in UTC) at which the workflow run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:29:55Z&quot;</code></p>
         */
        UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        /**
         * <p>The time (in UTC) at which the workflow run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         */
        _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        WorkflowRunSummary build();

        /**
         * <p>The time (in UTC) at which the workflow was initially created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         */
        _FinalStage initialRunAt(Optional<OffsetDateTime> initialRunAt);

        _FinalStage initialRunAt(OffsetDateTime initialRunAt);

        /**
         * <p>The user of the person who reviewed the workflow run. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;jane.doe@example.com&quot;</code></p>
         */
        _FinalStage reviewedByUser(Optional<String> reviewedByUser);

        _FinalStage reviewedByUser(String reviewedByUser);

        /**
         * <p>The time (in UTC) at which the workflow run was reviewed. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         */
        _FinalStage reviewedAt(Optional<OffsetDateTime> reviewedAt);

        _FinalStage reviewedAt(OffsetDateTime reviewedAt);

        /**
         * <p>The start time (in UTC) that the workflow actually started executing. This occurs after the <code>initialRunAt</code> time. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         */
        _FinalStage startTime(Optional<OffsetDateTime> startTime);

        _FinalStage startTime(OffsetDateTime startTime);

        /**
         * <p>The end time (in UTC) that the workflow finished. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:35:00Z&quot;</code></p>
         */
        _FinalStage endTime(Optional<OffsetDateTime> endTime);

        _FinalStage endTime(OffsetDateTime endTime);

        /**
         * <p>The batch ID of the WorkflowRun. If that WorkflowRun was created from a batch of files, all runs in that batch will have the same batch ID.</p>
         * <p>Example: <code>&quot;batch_7Ws31-F5&quot;</code></p>
         */
        _FinalStage batchId(Optional<String> batchId);

        _FinalStage batchId(String batchId);

        /**
         * <p>The note that was added when the workflow run was rejected.</p>
         * <p>Example: <code>&quot;Invalid invoice format&quot;</code></p>
         */
        _FinalStage rejectionNote(Optional<String> rejectionNote);

        _FinalStage rejectionNote(String rejectionNote);

        _FinalStage usage(Optional<WorkflowRunCredits> usage);

        _FinalStage usage(WorkflowRunCredits usage);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements IdStage,
                    StatusStage,
                    WorkflowIdStage,
                    WorkflowNameStage,
                    WorkflowVersionIdStage,
                    CreatedAtStage,
                    UpdatedAtStage,
                    _FinalStage {
        private String id;

        private WorkflowStatus status;

        private String workflowId;

        private String workflowName;

        private String workflowVersionId;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private Optional<WorkflowRunCredits> usage = Optional.empty();

        private Optional<String> rejectionNote = Optional.empty();

        private Optional<String> batchId = Optional.empty();

        private Optional<OffsetDateTime> endTime = Optional.empty();

        private Optional<OffsetDateTime> startTime = Optional.empty();

        private Optional<OffsetDateTime> reviewedAt = Optional.empty();

        private Optional<String> reviewedByUser = Optional.empty();

        private Optional<OffsetDateTime> initialRunAt = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WorkflowRunSummary other) {
            id(other.getId());
            status(other.getStatus());
            initialRunAt(other.getInitialRunAt());
            reviewedByUser(other.getReviewedByUser());
            reviewedAt(other.getReviewedAt());
            startTime(other.getStartTime());
            endTime(other.getEndTime());
            workflowId(other.getWorkflowId());
            workflowName(other.getWorkflowName());
            workflowVersionId(other.getWorkflowVersionId());
            batchId(other.getBatchId());
            rejectionNote(other.getRejectionNote());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            usage(other.getUsage());
            return this;
        }

        /**
         * <p>The ID of the workflow run.</p>
         * <p>Example: <code>&quot;workflow_run_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         * <p>The ID of the workflow run.</p>
         * <p>Example: <code>&quot;workflow_run_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public StatusStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("status")
        public WorkflowIdStage status(@NotNull WorkflowStatus status) {
            this.status = Objects.requireNonNull(status, "status must not be null");
            return this;
        }

        /**
         * <p>The ID of the workflow that was run. Will always start with &quot;workflow&quot;.</p>
         * <p>Example: <code>&quot;workflow_BMdfq_yWM3sT-ZzvCnA3f&quot;</code></p>
         * <p>The ID of the workflow that was run. Will always start with &quot;workflow&quot;.</p>
         * <p>Example: <code>&quot;workflow_BMdfq_yWM3sT-ZzvCnA3f&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("workflowId")
        public WorkflowNameStage workflowId(@NotNull String workflowId) {
            this.workflowId = Objects.requireNonNull(workflowId, "workflowId must not be null");
            return this;
        }

        /**
         * <p>The name of the workflow that was run.</p>
         * <p>Example: <code>&quot;Invoice Processing&quot;</code></p>
         * <p>The name of the workflow that was run.</p>
         * <p>Example: <code>&quot;Invoice Processing&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("workflowName")
        public WorkflowVersionIdStage workflowName(@NotNull String workflowName) {
            this.workflowName = Objects.requireNonNull(workflowName, "workflowName must not be null");
            return this;
        }

        /**
         * <p>The ID of the workflow version that was run. Will always start with &quot;workflow_version&quot;.</p>
         * <p>Example: <code>&quot;workflow_version_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         * <p>The ID of the workflow version that was run. Will always start with &quot;workflow_version&quot;.</p>
         * <p>Example: <code>&quot;workflow_version_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("workflowVersionId")
        public CreatedAtStage workflowVersionId(@NotNull String workflowVersionId) {
            this.workflowVersionId = Objects.requireNonNull(workflowVersionId, "workflowVersionId must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:29:55Z&quot;</code></p>
         * <p>The time (in UTC) at which the workflow run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:29:55Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * <p>The time (in UTC) at which the workflow run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updatedAt")
        public _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage usage(WorkflowRunCredits usage) {
            this.usage = Optional.ofNullable(usage);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "usage", nulls = Nulls.SKIP)
        public _FinalStage usage(Optional<WorkflowRunCredits> usage) {
            this.usage = usage;
            return this;
        }

        /**
         * <p>The note that was added when the workflow run was rejected.</p>
         * <p>Example: <code>&quot;Invalid invoice format&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage rejectionNote(String rejectionNote) {
            this.rejectionNote = Optional.ofNullable(rejectionNote);
            return this;
        }

        /**
         * <p>The note that was added when the workflow run was rejected.</p>
         * <p>Example: <code>&quot;Invalid invoice format&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "rejectionNote", nulls = Nulls.SKIP)
        public _FinalStage rejectionNote(Optional<String> rejectionNote) {
            this.rejectionNote = rejectionNote;
            return this;
        }

        /**
         * <p>The batch ID of the WorkflowRun. If that WorkflowRun was created from a batch of files, all runs in that batch will have the same batch ID.</p>
         * <p>Example: <code>&quot;batch_7Ws31-F5&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage batchId(String batchId) {
            this.batchId = Optional.ofNullable(batchId);
            return this;
        }

        /**
         * <p>The batch ID of the WorkflowRun. If that WorkflowRun was created from a batch of files, all runs in that batch will have the same batch ID.</p>
         * <p>Example: <code>&quot;batch_7Ws31-F5&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "batchId", nulls = Nulls.SKIP)
        public _FinalStage batchId(Optional<String> batchId) {
            this.batchId = batchId;
            return this;
        }

        /**
         * <p>The end time (in UTC) that the workflow finished. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:35:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage endTime(OffsetDateTime endTime) {
            this.endTime = Optional.ofNullable(endTime);
            return this;
        }

        /**
         * <p>The end time (in UTC) that the workflow finished. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:35:00Z&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "endTime", nulls = Nulls.SKIP)
        public _FinalStage endTime(Optional<OffsetDateTime> endTime) {
            this.endTime = endTime;
            return this;
        }

        /**
         * <p>The start time (in UTC) that the workflow actually started executing. This occurs after the <code>initialRunAt</code> time. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage startTime(OffsetDateTime startTime) {
            this.startTime = Optional.ofNullable(startTime);
            return this;
        }

        /**
         * <p>The start time (in UTC) that the workflow actually started executing. This occurs after the <code>initialRunAt</code> time. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "startTime", nulls = Nulls.SKIP)
        public _FinalStage startTime(Optional<OffsetDateTime> startTime) {
            this.startTime = startTime;
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run was reviewed. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage reviewedAt(OffsetDateTime reviewedAt) {
            this.reviewedAt = Optional.ofNullable(reviewedAt);
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow run was reviewed. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "reviewedAt", nulls = Nulls.SKIP)
        public _FinalStage reviewedAt(Optional<OffsetDateTime> reviewedAt) {
            this.reviewedAt = reviewedAt;
            return this;
        }

        /**
         * <p>The user of the person who reviewed the workflow run. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;jane.doe@example.com&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage reviewedByUser(String reviewedByUser) {
            this.reviewedByUser = Optional.ofNullable(reviewedByUser);
            return this;
        }

        /**
         * <p>The user of the person who reviewed the workflow run. Will not be included if the workflow run has not been reviewed.</p>
         * <p>Example: <code>&quot;jane.doe@example.com&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "reviewedByUser", nulls = Nulls.SKIP)
        public _FinalStage reviewedByUser(Optional<String> reviewedByUser) {
            this.reviewedByUser = reviewedByUser;
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow was initially created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage initialRunAt(OffsetDateTime initialRunAt) {
            this.initialRunAt = Optional.ofNullable(initialRunAt);
            return this;
        }

        /**
         * <p>The time (in UTC) at which the workflow was initially created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         */
        @java.lang.Override
        @JsonSetter(value = "initialRunAt", nulls = Nulls.SKIP)
        public _FinalStage initialRunAt(Optional<OffsetDateTime> initialRunAt) {
            this.initialRunAt = initialRunAt;
            return this;
        }

        @java.lang.Override
        public WorkflowRunSummary build() {
            return new WorkflowRunSummary(
                    id,
                    status,
                    initialRunAt,
                    reviewedByUser,
                    reviewedAt,
                    startTime,
                    endTime,
                    workflowId,
                    workflowName,
                    workflowVersionId,
                    batchId,
                    rejectionNote,
                    createdAt,
                    updatedAt,
                    usage,
                    additionalProperties);
        }
    }
}
