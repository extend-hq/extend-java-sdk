/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BlockMetadataPage.Builder.class)
public final class BlockMetadataPage {
    private final int number;

    private final Optional<Double> width;

    private final Optional<Double> height;

    private final Map<String, Object> additionalProperties;

    private BlockMetadataPage(
            int number, Optional<Double> width, Optional<Double> height, Map<String, Object> additionalProperties) {
        this.number = number;
        this.width = width;
        this.height = height;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The page number where this block appears.
     */
    @JsonProperty("number")
    public int getNumber() {
        return number;
    }

    /**
     * @return The width of the page in points.
     */
    @JsonProperty("width")
    public Optional<Double> getWidth() {
        return width;
    }

    /**
     * @return The height of the page in points.
     */
    @JsonProperty("height")
    public Optional<Double> getHeight() {
        return height;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BlockMetadataPage && equalTo((BlockMetadataPage) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BlockMetadataPage other) {
        return number == other.number && width.equals(other.width) && height.equals(other.height);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.number, this.width, this.height);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NumberStage builder() {
        return new Builder();
    }

    public interface NumberStage {
        /**
         * <p>The page number where this block appears.</p>
         */
        _FinalStage number(int number);

        Builder from(BlockMetadataPage other);
    }

    public interface _FinalStage {
        BlockMetadataPage build();

        /**
         * <p>The width of the page in points.</p>
         */
        _FinalStage width(Optional<Double> width);

        _FinalStage width(Double width);

        /**
         * <p>The height of the page in points.</p>
         */
        _FinalStage height(Optional<Double> height);

        _FinalStage height(Double height);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NumberStage, _FinalStage {
        private int number;

        private Optional<Double> height = Optional.empty();

        private Optional<Double> width = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BlockMetadataPage other) {
            number(other.getNumber());
            width(other.getWidth());
            height(other.getHeight());
            return this;
        }

        /**
         * <p>The page number where this block appears.</p>
         * <p>The page number where this block appears.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("number")
        public _FinalStage number(int number) {
            this.number = number;
            return this;
        }

        /**
         * <p>The height of the page in points.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage height(Double height) {
            this.height = Optional.ofNullable(height);
            return this;
        }

        /**
         * <p>The height of the page in points.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "height", nulls = Nulls.SKIP)
        public _FinalStage height(Optional<Double> height) {
            this.height = height;
            return this;
        }

        /**
         * <p>The width of the page in points.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage width(Double width) {
            this.width = Optional.ofNullable(width);
            return this;
        }

        /**
         * <p>The width of the page in points.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "width", nulls = Nulls.SKIP)
        public _FinalStage width(Optional<Double> width) {
            this.width = width;
            return this;
        }

        @java.lang.Override
        public BlockMetadataPage build() {
            return new BlockMetadataPage(number, width, height, additionalProperties);
        }
    }
}
