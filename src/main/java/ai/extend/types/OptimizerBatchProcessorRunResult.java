/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = OptimizerBatchProcessorRunResult.Builder.class)
public final class OptimizerBatchProcessorRunResult {
    private final String batchProcessorRunId;

    private final boolean isBaseline;

    private final OptimizerBatchProcessorRunResultProcessorConfig processorConfig;

    private final OptimizerRunMetrics metrics;

    private final Map<String, Object> additionalProperties;

    private OptimizerBatchProcessorRunResult(
            String batchProcessorRunId,
            boolean isBaseline,
            OptimizerBatchProcessorRunResultProcessorConfig processorConfig,
            OptimizerRunMetrics metrics,
            Map<String, Object> additionalProperties) {
        this.batchProcessorRunId = batchProcessorRunId;
        this.isBaseline = isBaseline;
        this.processorConfig = processorConfig;
        this.metrics = metrics;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Unique identifier for the batch processor run
     */
    @JsonProperty("batchProcessorRunId")
    public String getBatchProcessorRunId() {
        return batchProcessorRunId;
    }

    /**
     * @return Whether this is the baseline (original) configuration
     */
    @JsonProperty("isBaseline")
    public boolean getIsBaseline() {
        return isBaseline;
    }

    /**
     * @return Processor configuration used for this run
     */
    @JsonProperty("processorConfig")
    public OptimizerBatchProcessorRunResultProcessorConfig getProcessorConfig() {
        return processorConfig;
    }

    @JsonProperty("metrics")
    public OptimizerRunMetrics getMetrics() {
        return metrics;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof OptimizerBatchProcessorRunResult && equalTo((OptimizerBatchProcessorRunResult) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(OptimizerBatchProcessorRunResult other) {
        return batchProcessorRunId.equals(other.batchProcessorRunId)
                && isBaseline == other.isBaseline
                && processorConfig.equals(other.processorConfig)
                && metrics.equals(other.metrics);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.batchProcessorRunId, this.isBaseline, this.processorConfig, this.metrics);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BatchProcessorRunIdStage builder() {
        return new Builder();
    }

    public interface BatchProcessorRunIdStage {
        /**
         * <p>Unique identifier for the batch processor run</p>
         */
        IsBaselineStage batchProcessorRunId(@NotNull String batchProcessorRunId);

        Builder from(OptimizerBatchProcessorRunResult other);
    }

    public interface IsBaselineStage {
        /**
         * <p>Whether this is the baseline (original) configuration</p>
         */
        ProcessorConfigStage isBaseline(boolean isBaseline);
    }

    public interface ProcessorConfigStage {
        /**
         * <p>Processor configuration used for this run</p>
         */
        MetricsStage processorConfig(@NotNull OptimizerBatchProcessorRunResultProcessorConfig processorConfig);
    }

    public interface MetricsStage {
        _FinalStage metrics(@NotNull OptimizerRunMetrics metrics);
    }

    public interface _FinalStage {
        OptimizerBatchProcessorRunResult build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements BatchProcessorRunIdStage, IsBaselineStage, ProcessorConfigStage, MetricsStage, _FinalStage {
        private String batchProcessorRunId;

        private boolean isBaseline;

        private OptimizerBatchProcessorRunResultProcessorConfig processorConfig;

        private OptimizerRunMetrics metrics;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(OptimizerBatchProcessorRunResult other) {
            batchProcessorRunId(other.getBatchProcessorRunId());
            isBaseline(other.getIsBaseline());
            processorConfig(other.getProcessorConfig());
            metrics(other.getMetrics());
            return this;
        }

        /**
         * <p>Unique identifier for the batch processor run</p>
         * <p>Unique identifier for the batch processor run</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("batchProcessorRunId")
        public IsBaselineStage batchProcessorRunId(@NotNull String batchProcessorRunId) {
            this.batchProcessorRunId =
                    Objects.requireNonNull(batchProcessorRunId, "batchProcessorRunId must not be null");
            return this;
        }

        /**
         * <p>Whether this is the baseline (original) configuration</p>
         * <p>Whether this is the baseline (original) configuration</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("isBaseline")
        public ProcessorConfigStage isBaseline(boolean isBaseline) {
            this.isBaseline = isBaseline;
            return this;
        }

        /**
         * <p>Processor configuration used for this run</p>
         * <p>Processor configuration used for this run</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processorConfig")
        public MetricsStage processorConfig(@NotNull OptimizerBatchProcessorRunResultProcessorConfig processorConfig) {
            this.processorConfig = Objects.requireNonNull(processorConfig, "processorConfig must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("metrics")
        public _FinalStage metrics(@NotNull OptimizerRunMetrics metrics) {
            this.metrics = Objects.requireNonNull(metrics, "metrics must not be null");
            return this;
        }

        @java.lang.Override
        public OptimizerBatchProcessorRunResult build() {
            return new OptimizerBatchProcessorRunResult(
                    batchProcessorRunId, isBaseline, processorConfig, metrics, additionalProperties);
        }
    }
}
