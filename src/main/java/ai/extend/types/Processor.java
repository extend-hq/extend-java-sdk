/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = Processor.Builder.class)
public final class Processor {
    private final String object;

    private final String id;

    private final String name;

    private final ProcessorType type;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final ProcessorVersion draftVersion;

    private final Map<String, Object> additionalProperties;

    private Processor(
            String object,
            String id,
            String name,
            ProcessorType type,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            ProcessorVersion draftVersion,
            Map<String, Object> additionalProperties) {
        this.object = object;
        this.id = id;
        this.name = name;
        this.type = type;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.draftVersion = draftVersion;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The type of response. In this case, it will always be <code>&quot;document_processor&quot;</code>.
     */
    @JsonProperty("object")
    public String getObject() {
        return object;
    }

    /**
     * @return The ID of the processor.
     * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The name of the processor.
     * <p>Example: <code>&quot;Invoice Processor&quot;</code></p>
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("type")
    public ProcessorType getType() {
        return type;
    }

    /**
     * @return The time (in UTC) at which the processor was created. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
     */
    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The time (in UTC) at which the processor was last updated. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
     */
    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty("draftVersion")
    public ProcessorVersion getDraftVersion() {
        return draftVersion;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Processor && equalTo((Processor) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Processor other) {
        return object.equals(other.object)
                && id.equals(other.id)
                && name.equals(other.name)
                && type.equals(other.type)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && draftVersion.equals(other.draftVersion);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.object, this.id, this.name, this.type, this.createdAt, this.updatedAt, this.draftVersion);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ObjectStage builder() {
        return new Builder();
    }

    public interface ObjectStage {
        /**
         * <p>The type of response. In this case, it will always be <code>&quot;document_processor&quot;</code>.</p>
         */
        IdStage object(@NotNull String object);

        Builder from(Processor other);
    }

    public interface IdStage {
        /**
         * <p>The ID of the processor.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         */
        NameStage id(@NotNull String id);
    }

    public interface NameStage {
        /**
         * <p>The name of the processor.</p>
         * <p>Example: <code>&quot;Invoice Processor&quot;</code></p>
         */
        TypeStage name(@NotNull String name);
    }

    public interface TypeStage {
        CreatedAtStage type(@NotNull ProcessorType type);
    }

    public interface CreatedAtStage {
        /**
         * <p>The time (in UTC) at which the processor was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         */
        UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        /**
         * <p>The time (in UTC) at which the processor was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         */
        DraftVersionStage updatedAt(@NotNull OffsetDateTime updatedAt);
    }

    public interface DraftVersionStage {
        _FinalStage draftVersion(@NotNull ProcessorVersion draftVersion);
    }

    public interface _FinalStage {
        Processor build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ObjectStage,
                    IdStage,
                    NameStage,
                    TypeStage,
                    CreatedAtStage,
                    UpdatedAtStage,
                    DraftVersionStage,
                    _FinalStage {
        private String object;

        private String id;

        private String name;

        private ProcessorType type;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private ProcessorVersion draftVersion;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Processor other) {
            object(other.getObject());
            id(other.getId());
            name(other.getName());
            type(other.getType());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            draftVersion(other.getDraftVersion());
            return this;
        }

        /**
         * <p>The type of response. In this case, it will always be <code>&quot;document_processor&quot;</code>.</p>
         * <p>The type of response. In this case, it will always be <code>&quot;document_processor&quot;</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("object")
        public IdStage object(@NotNull String object) {
            this.object = Objects.requireNonNull(object, "object must not be null");
            return this;
        }

        /**
         * <p>The ID of the processor.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * <p>The ID of the processor.</p>
         * <p>Example: <code>&quot;dp_Xj8mK2pL9nR4vT7qY5wZ&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public NameStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The name of the processor.</p>
         * <p>Example: <code>&quot;Invoice Processor&quot;</code></p>
         * <p>The name of the processor.</p>
         * <p>Example: <code>&quot;Invoice Processor&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public TypeStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("type")
        public CreatedAtStage type(@NotNull ProcessorType type) {
            this.type = Objects.requireNonNull(type, "type must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the processor was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         * <p>The time (in UTC) at which the processor was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:30:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the processor was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * <p>The time (in UTC) at which the processor was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updatedAt")
        public DraftVersionStage updatedAt(@NotNull OffsetDateTime updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("draftVersion")
        public _FinalStage draftVersion(@NotNull ProcessorVersion draftVersion) {
            this.draftVersion = Objects.requireNonNull(draftVersion, "draftVersion must not be null");
            return this;
        }

        @java.lang.Override
        public Processor build() {
            return new Processor(object, id, name, type, createdAt, updatedAt, draftVersion, additionalProperties);
        }
    }
}
