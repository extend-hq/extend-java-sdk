/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ExtractionFieldResultReference.Builder.class)
public final class ExtractionFieldResultReference {
    private final String id;

    private final String fieldName;

    private final double page;

    private final List<ExtractionFieldResultReferenceBoundingBoxesItem> boundingBoxes;

    private final Map<String, Object> additionalProperties;

    private ExtractionFieldResultReference(
            String id,
            String fieldName,
            double page,
            List<ExtractionFieldResultReferenceBoundingBoxesItem> boundingBoxes,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.fieldName = fieldName;
        this.page = page;
        this.boundingBoxes = boundingBoxes;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The unique identifier for this field
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The name of the extracted field
     */
    @JsonProperty("fieldName")
    public String getFieldName() {
        return fieldName;
    }

    /**
     * @return The page number that this bounding box is from
     */
    @JsonProperty("page")
    public double getPage() {
        return page;
    }

    /**
     * @return The bounding boxes of the field
     */
    @JsonProperty("boundingBoxes")
    public List<ExtractionFieldResultReferenceBoundingBoxesItem> getBoundingBoxes() {
        return boundingBoxes;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ExtractionFieldResultReference && equalTo((ExtractionFieldResultReference) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ExtractionFieldResultReference other) {
        return id.equals(other.id)
                && fieldName.equals(other.fieldName)
                && page == other.page
                && boundingBoxes.equals(other.boundingBoxes);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.fieldName, this.page, this.boundingBoxes);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>The unique identifier for this field</p>
         */
        FieldNameStage id(@NotNull String id);

        Builder from(ExtractionFieldResultReference other);
    }

    public interface FieldNameStage {
        /**
         * <p>The name of the extracted field</p>
         */
        PageStage fieldName(@NotNull String fieldName);
    }

    public interface PageStage {
        /**
         * <p>The page number that this bounding box is from</p>
         */
        _FinalStage page(double page);
    }

    public interface _FinalStage {
        ExtractionFieldResultReference build();

        /**
         * <p>The bounding boxes of the field</p>
         */
        _FinalStage boundingBoxes(List<ExtractionFieldResultReferenceBoundingBoxesItem> boundingBoxes);

        _FinalStage addBoundingBoxes(ExtractionFieldResultReferenceBoundingBoxesItem boundingBoxes);

        _FinalStage addAllBoundingBoxes(List<ExtractionFieldResultReferenceBoundingBoxesItem> boundingBoxes);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, FieldNameStage, PageStage, _FinalStage {
        private String id;

        private String fieldName;

        private double page;

        private List<ExtractionFieldResultReferenceBoundingBoxesItem> boundingBoxes = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ExtractionFieldResultReference other) {
            id(other.getId());
            fieldName(other.getFieldName());
            page(other.getPage());
            boundingBoxes(other.getBoundingBoxes());
            return this;
        }

        /**
         * <p>The unique identifier for this field</p>
         * <p>The unique identifier for this field</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public FieldNameStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The name of the extracted field</p>
         * <p>The name of the extracted field</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("fieldName")
        public PageStage fieldName(@NotNull String fieldName) {
            this.fieldName = Objects.requireNonNull(fieldName, "fieldName must not be null");
            return this;
        }

        /**
         * <p>The page number that this bounding box is from</p>
         * <p>The page number that this bounding box is from</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("page")
        public _FinalStage page(double page) {
            this.page = page;
            return this;
        }

        /**
         * <p>The bounding boxes of the field</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllBoundingBoxes(List<ExtractionFieldResultReferenceBoundingBoxesItem> boundingBoxes) {
            this.boundingBoxes.addAll(boundingBoxes);
            return this;
        }

        /**
         * <p>The bounding boxes of the field</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addBoundingBoxes(ExtractionFieldResultReferenceBoundingBoxesItem boundingBoxes) {
            this.boundingBoxes.add(boundingBoxes);
            return this;
        }

        /**
         * <p>The bounding boxes of the field</p>
         */
        @java.lang.Override
        @JsonSetter(value = "boundingBoxes", nulls = Nulls.SKIP)
        public _FinalStage boundingBoxes(List<ExtractionFieldResultReferenceBoundingBoxesItem> boundingBoxes) {
            this.boundingBoxes.clear();
            this.boundingBoxes.addAll(boundingBoxes);
            return this;
        }

        @java.lang.Override
        public ExtractionFieldResultReference build() {
            return new ExtractionFieldResultReference(id, fieldName, page, boundingBoxes, additionalProperties);
        }
    }
}
