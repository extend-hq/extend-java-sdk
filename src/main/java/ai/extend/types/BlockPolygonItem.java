/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BlockPolygonItem.Builder.class)
public final class BlockPolygonItem {
    private final double x;

    private final double y;

    private final Map<String, Object> additionalProperties;

    private BlockPolygonItem(double x, double y, Map<String, Object> additionalProperties) {
        this.x = x;
        this.y = y;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("x")
    public double getX() {
        return x;
    }

    @JsonProperty("y")
    public double getY() {
        return y;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BlockPolygonItem && equalTo((BlockPolygonItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BlockPolygonItem other) {
        return x == other.x && y == other.y;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.x, this.y);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static XStage builder() {
        return new Builder();
    }

    public interface XStage {
        YStage x(double x);

        Builder from(BlockPolygonItem other);
    }

    public interface YStage {
        _FinalStage y(double y);
    }

    public interface _FinalStage {
        BlockPolygonItem build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements XStage, YStage, _FinalStage {
        private double x;

        private double y;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BlockPolygonItem other) {
            x(other.getX());
            y(other.getY());
            return this;
        }

        @java.lang.Override
        @JsonSetter("x")
        public YStage x(double x) {
            this.x = x;
            return this;
        }

        @java.lang.Override
        @JsonSetter("y")
        public _FinalStage y(double y) {
            this.y = y;
            return this;
        }

        @java.lang.Override
        public BlockPolygonItem build() {
            return new BlockPolygonItem(x, y, additionalProperties);
        }
    }
}
