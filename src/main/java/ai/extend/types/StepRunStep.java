/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = StepRunStep.Builder.class)
public final class StepRunStep {
    private final String object;

    private final String id;

    private final String name;

    private final StepRunStepType type;

    private final Map<String, Object> additionalProperties;

    private StepRunStep(
            String object, String id, String name, StepRunStepType type, Map<String, Object> additionalProperties) {
        this.object = object;
        this.id = id;
        this.name = name;
        this.type = type;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The type of response. In this case, it will always be <code>&quot;workflow_step&quot;</code>.
     */
    @JsonProperty("object")
    public String getObject() {
        return object;
    }

    /**
     * @return The ID of the workflow step.
     * <p>Example: <code>&quot;step_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The name of the workflow step.
     * <p>Example: <code>&quot;Validate Invoice Total&quot;</code></p>
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * @return The type of workflow step:
     * <ul>
     * <li><code>&quot;EXTERNAL_DATA_VALIDATION&quot;</code> - Validates data against an external source</li>
     * <li><code>&quot;RULE_VALIDATION&quot;</code> - Validates data against defined rules</li>
     * </ul>
     */
    @JsonProperty("type")
    public StepRunStepType getType() {
        return type;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof StepRunStep && equalTo((StepRunStep) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(StepRunStep other) {
        return object.equals(other.object) && id.equals(other.id) && name.equals(other.name) && type.equals(other.type);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.object, this.id, this.name, this.type);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ObjectStage builder() {
        return new Builder();
    }

    public interface ObjectStage {
        /**
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_step&quot;</code>.</p>
         */
        IdStage object(@NotNull String object);

        Builder from(StepRunStep other);
    }

    public interface IdStage {
        /**
         * <p>The ID of the workflow step.</p>
         * <p>Example: <code>&quot;step_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         */
        NameStage id(@NotNull String id);
    }

    public interface NameStage {
        /**
         * <p>The name of the workflow step.</p>
         * <p>Example: <code>&quot;Validate Invoice Total&quot;</code></p>
         */
        TypeStage name(@NotNull String name);
    }

    public interface TypeStage {
        /**
         * <p>The type of workflow step:</p>
         * <ul>
         * <li><code>&quot;EXTERNAL_DATA_VALIDATION&quot;</code> - Validates data against an external source</li>
         * <li><code>&quot;RULE_VALIDATION&quot;</code> - Validates data against defined rules</li>
         * </ul>
         */
        _FinalStage type(@NotNull StepRunStepType type);
    }

    public interface _FinalStage {
        StepRunStep build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ObjectStage, IdStage, NameStage, TypeStage, _FinalStage {
        private String object;

        private String id;

        private String name;

        private StepRunStepType type;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(StepRunStep other) {
            object(other.getObject());
            id(other.getId());
            name(other.getName());
            type(other.getType());
            return this;
        }

        /**
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_step&quot;</code>.</p>
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_step&quot;</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("object")
        public IdStage object(@NotNull String object) {
            this.object = Objects.requireNonNull(object, "object must not be null");
            return this;
        }

        /**
         * <p>The ID of the workflow step.</p>
         * <p>Example: <code>&quot;step_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         * <p>The ID of the workflow step.</p>
         * <p>Example: <code>&quot;step_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public NameStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The name of the workflow step.</p>
         * <p>Example: <code>&quot;Validate Invoice Total&quot;</code></p>
         * <p>The name of the workflow step.</p>
         * <p>Example: <code>&quot;Validate Invoice Total&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public TypeStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        /**
         * <p>The type of workflow step:</p>
         * <ul>
         * <li><code>&quot;EXTERNAL_DATA_VALIDATION&quot;</code> - Validates data against an external source</li>
         * <li><code>&quot;RULE_VALIDATION&quot;</code> - Validates data against defined rules</li>
         * </ul>
         * <p>The type of workflow step:</p>
         * <ul>
         * <li><code>&quot;EXTERNAL_DATA_VALIDATION&quot;</code> - Validates data against an external source</li>
         * <li><code>&quot;RULE_VALIDATION&quot;</code> - Validates data against defined rules</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("type")
        public _FinalStage type(@NotNull StepRunStepType type) {
            this.type = Objects.requireNonNull(type, "type must not be null");
            return this;
        }

        @java.lang.Override
        public StepRunStep build() {
            return new StepRunStep(object, id, name, type, additionalProperties);
        }
    }
}
