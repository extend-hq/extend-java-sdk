/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = StepRun.Builder.class)
public final class StepRun {
    private final String object;

    private final String id;

    private final StepRunStatus status;

    private final StepRunStep step;

    private final Optional<StepRunOutput> output;

    private final Map<String, Object> additionalProperties;

    private StepRun(
            String object,
            String id,
            StepRunStatus status,
            StepRunStep step,
            Optional<StepRunOutput> output,
            Map<String, Object> additionalProperties) {
        this.object = object;
        this.id = id;
        this.status = status;
        this.step = step;
        this.output = output;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The type of response. In this case, it will always be <code>&quot;workflow_step_run&quot;</code>.
     */
    @JsonProperty("object")
    public String getObject() {
        return object;
    }

    /**
     * @return The ID of the workflow step run.
     * <p>Example: <code>&quot;workflow_step_run_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The status of the workflow step run:
     * <ul>
     * <li><code>&quot;PENDING&quot;</code> - The step run is waiting to be executed</li>
     * <li><code>&quot;PROCESSING&quot;</code> - The step run is currently executing</li>
     * <li><code>&quot;PROCESSED&quot;</code> - The step run completed successfully</li>
     * <li><code>&quot;FAILED&quot;</code> - The step run encountered an error</li>
     * <li><code>&quot;CANCELLED&quot;</code> - The step run was cancelled</li>
     * </ul>
     */
    @JsonProperty("status")
    public StepRunStatus getStatus() {
        return status;
    }

    @JsonProperty("step")
    public StepRunStep getStep() {
        return step;
    }

    /**
     * @return The output of the WorkflowStepRun. The shape of the output depends on the type of the WorkflowStep in the <code>step</code> field:
     * <ul>
     * <li>For <code>&quot;EXTERNAL_DATA_VALIDATION&quot;</code> steps - The output will be the same object that was returned by the external endpoint configured for this step</li>
     * <li>For <code>&quot;RULE_VALIDATION&quot;</code> steps - See the below shape:</li>
     * </ul>
     */
    @JsonProperty("output")
    public Optional<StepRunOutput> getOutput() {
        return output;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof StepRun && equalTo((StepRun) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(StepRun other) {
        return object.equals(other.object)
                && id.equals(other.id)
                && status.equals(other.status)
                && step.equals(other.step)
                && output.equals(other.output);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.object, this.id, this.status, this.step, this.output);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ObjectStage builder() {
        return new Builder();
    }

    public interface ObjectStage {
        /**
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_step_run&quot;</code>.</p>
         */
        IdStage object(@NotNull String object);

        Builder from(StepRun other);
    }

    public interface IdStage {
        /**
         * <p>The ID of the workflow step run.</p>
         * <p>Example: <code>&quot;workflow_step_run_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         */
        StatusStage id(@NotNull String id);
    }

    public interface StatusStage {
        /**
         * <p>The status of the workflow step run:</p>
         * <ul>
         * <li><code>&quot;PENDING&quot;</code> - The step run is waiting to be executed</li>
         * <li><code>&quot;PROCESSING&quot;</code> - The step run is currently executing</li>
         * <li><code>&quot;PROCESSED&quot;</code> - The step run completed successfully</li>
         * <li><code>&quot;FAILED&quot;</code> - The step run encountered an error</li>
         * <li><code>&quot;CANCELLED&quot;</code> - The step run was cancelled</li>
         * </ul>
         */
        StepStage status(@NotNull StepRunStatus status);
    }

    public interface StepStage {
        _FinalStage step(@NotNull StepRunStep step);
    }

    public interface _FinalStage {
        StepRun build();

        /**
         * <p>The output of the WorkflowStepRun. The shape of the output depends on the type of the WorkflowStep in the <code>step</code> field:</p>
         * <ul>
         * <li>For <code>&quot;EXTERNAL_DATA_VALIDATION&quot;</code> steps - The output will be the same object that was returned by the external endpoint configured for this step</li>
         * <li>For <code>&quot;RULE_VALIDATION&quot;</code> steps - See the below shape:</li>
         * </ul>
         */
        _FinalStage output(Optional<StepRunOutput> output);

        _FinalStage output(StepRunOutput output);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ObjectStage, IdStage, StatusStage, StepStage, _FinalStage {
        private String object;

        private String id;

        private StepRunStatus status;

        private StepRunStep step;

        private Optional<StepRunOutput> output = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(StepRun other) {
            object(other.getObject());
            id(other.getId());
            status(other.getStatus());
            step(other.getStep());
            output(other.getOutput());
            return this;
        }

        /**
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_step_run&quot;</code>.</p>
         * <p>The type of response. In this case, it will always be <code>&quot;workflow_step_run&quot;</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("object")
        public IdStage object(@NotNull String object) {
            this.object = Objects.requireNonNull(object, "object must not be null");
            return this;
        }

        /**
         * <p>The ID of the workflow step run.</p>
         * <p>Example: <code>&quot;workflow_step_run_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         * <p>The ID of the workflow step run.</p>
         * <p>Example: <code>&quot;workflow_step_run_xKm9pNv3qWsY_jL2tR5Dh&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public StatusStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The status of the workflow step run:</p>
         * <ul>
         * <li><code>&quot;PENDING&quot;</code> - The step run is waiting to be executed</li>
         * <li><code>&quot;PROCESSING&quot;</code> - The step run is currently executing</li>
         * <li><code>&quot;PROCESSED&quot;</code> - The step run completed successfully</li>
         * <li><code>&quot;FAILED&quot;</code> - The step run encountered an error</li>
         * <li><code>&quot;CANCELLED&quot;</code> - The step run was cancelled</li>
         * </ul>
         * <p>The status of the workflow step run:</p>
         * <ul>
         * <li><code>&quot;PENDING&quot;</code> - The step run is waiting to be executed</li>
         * <li><code>&quot;PROCESSING&quot;</code> - The step run is currently executing</li>
         * <li><code>&quot;PROCESSED&quot;</code> - The step run completed successfully</li>
         * <li><code>&quot;FAILED&quot;</code> - The step run encountered an error</li>
         * <li><code>&quot;CANCELLED&quot;</code> - The step run was cancelled</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("status")
        public StepStage status(@NotNull StepRunStatus status) {
            this.status = Objects.requireNonNull(status, "status must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("step")
        public _FinalStage step(@NotNull StepRunStep step) {
            this.step = Objects.requireNonNull(step, "step must not be null");
            return this;
        }

        /**
         * <p>The output of the WorkflowStepRun. The shape of the output depends on the type of the WorkflowStep in the <code>step</code> field:</p>
         * <ul>
         * <li>For <code>&quot;EXTERNAL_DATA_VALIDATION&quot;</code> steps - The output will be the same object that was returned by the external endpoint configured for this step</li>
         * <li>For <code>&quot;RULE_VALIDATION&quot;</code> steps - See the below shape:</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage output(StepRunOutput output) {
            this.output = Optional.ofNullable(output);
            return this;
        }

        /**
         * <p>The output of the WorkflowStepRun. The shape of the output depends on the type of the WorkflowStep in the <code>step</code> field:</p>
         * <ul>
         * <li>For <code>&quot;EXTERNAL_DATA_VALIDATION&quot;</code> steps - The output will be the same object that was returned by the external endpoint configured for this step</li>
         * <li>For <code>&quot;RULE_VALIDATION&quot;</code> steps - See the below shape:</li>
         * </ul>
         */
        @java.lang.Override
        @JsonSetter(value = "output", nulls = Nulls.SKIP)
        public _FinalStage output(Optional<StepRunOutput> output) {
            this.output = output;
            return this;
        }

        @java.lang.Override
        public StepRun build() {
            return new StepRun(object, id, status, step, output, additionalProperties);
        }
    }
}
