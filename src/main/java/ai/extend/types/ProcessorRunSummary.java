/**
 * This file was auto-generated by Fern from our API Definition.
 */
package ai.extend.types;

import ai.extend.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ProcessorRunSummary.Builder.class)
public final class ProcessorRunSummary {
    private final String id;

    private final ProcessorStatus status;

    private final String processorId;

    private final String processorName;

    private final String processorVersionId;

    private final Optional<ProcessorRunSummaryType> type;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final Optional<DocumentProcessorRunCredits> usage;

    private final Map<String, Object> additionalProperties;

    private ProcessorRunSummary(
            String id,
            ProcessorStatus status,
            String processorId,
            String processorName,
            String processorVersionId,
            Optional<ProcessorRunSummaryType> type,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Optional<DocumentProcessorRunCredits> usage,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.status = status;
        this.processorId = processorId;
        this.processorName = processorName;
        this.processorVersionId = processorVersionId;
        this.type = type;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.usage = usage;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the processor run.
     * <p>Example: <code>&quot;dpr_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("status")
    public ProcessorStatus getStatus() {
        return status;
    }

    /**
     * @return The ID of the processor that was run. Will always start with &quot;dp_&quot;.
     * <p>Example: <code>&quot;dp_BMdfq_yWM3sT-ZzvCnA3f&quot;</code></p>
     */
    @JsonProperty("processorId")
    public String getProcessorId() {
        return processorId;
    }

    /**
     * @return The name of the processor that was run.
     * <p>Example: <code>&quot;Invoice Extractor&quot;</code></p>
     */
    @JsonProperty("processorName")
    public String getProcessorName() {
        return processorName;
    }

    /**
     * @return The ID of the processor version that was run. Will always start with &quot;dpv_&quot;.
     * <p>Example: <code>&quot;dpv_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
     */
    @JsonProperty("processorVersionId")
    public String getProcessorVersionId() {
        return processorVersionId;
    }

    /**
     * @return The type of processor that was run:
     * <ul>
     * <li><code>&quot;EXTRACT&quot;</code> - Extraction processor</li>
     * <li><code>&quot;SPLITTER&quot;</code> - Splitting processor</li>
     * <li><code>&quot;CLASSIFY&quot;</code> - Classification processor</li>
     * </ul>
     */
    @JsonProperty("type")
    public Optional<ProcessorRunSummaryType> getType() {
        return type;
    }

    /**
     * @return The time (in UTC) at which the processor run was created. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T15:29:55Z&quot;</code></p>
     */
    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The time (in UTC) at which the processor run was last updated. Will follow the RFC 3339 format.
     * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
     */
    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty("usage")
    public Optional<DocumentProcessorRunCredits> getUsage() {
        return usage;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ProcessorRunSummary && equalTo((ProcessorRunSummary) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ProcessorRunSummary other) {
        return id.equals(other.id)
                && status.equals(other.status)
                && processorId.equals(other.processorId)
                && processorName.equals(other.processorName)
                && processorVersionId.equals(other.processorVersionId)
                && type.equals(other.type)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && usage.equals(other.usage);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.status,
                this.processorId,
                this.processorName,
                this.processorVersionId,
                this.type,
                this.createdAt,
                this.updatedAt,
                this.usage);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>The ID of the processor run.</p>
         * <p>Example: <code>&quot;dpr_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         */
        StatusStage id(@NotNull String id);

        Builder from(ProcessorRunSummary other);
    }

    public interface StatusStage {
        ProcessorIdStage status(@NotNull ProcessorStatus status);
    }

    public interface ProcessorIdStage {
        /**
         * <p>The ID of the processor that was run. Will always start with &quot;dp_&quot;.</p>
         * <p>Example: <code>&quot;dp_BMdfq_yWM3sT-ZzvCnA3f&quot;</code></p>
         */
        ProcessorNameStage processorId(@NotNull String processorId);
    }

    public interface ProcessorNameStage {
        /**
         * <p>The name of the processor that was run.</p>
         * <p>Example: <code>&quot;Invoice Extractor&quot;</code></p>
         */
        ProcessorVersionIdStage processorName(@NotNull String processorName);
    }

    public interface ProcessorVersionIdStage {
        /**
         * <p>The ID of the processor version that was run. Will always start with &quot;dpv_&quot;.</p>
         * <p>Example: <code>&quot;dpv_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         */
        CreatedAtStage processorVersionId(@NotNull String processorVersionId);
    }

    public interface CreatedAtStage {
        /**
         * <p>The time (in UTC) at which the processor run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:29:55Z&quot;</code></p>
         */
        UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        /**
         * <p>The time (in UTC) at which the processor run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         */
        _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        ProcessorRunSummary build();

        /**
         * <p>The type of processor that was run:</p>
         * <ul>
         * <li><code>&quot;EXTRACT&quot;</code> - Extraction processor</li>
         * <li><code>&quot;SPLITTER&quot;</code> - Splitting processor</li>
         * <li><code>&quot;CLASSIFY&quot;</code> - Classification processor</li>
         * </ul>
         */
        _FinalStage type(Optional<ProcessorRunSummaryType> type);

        _FinalStage type(ProcessorRunSummaryType type);

        _FinalStage usage(Optional<DocumentProcessorRunCredits> usage);

        _FinalStage usage(DocumentProcessorRunCredits usage);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements IdStage,
                    StatusStage,
                    ProcessorIdStage,
                    ProcessorNameStage,
                    ProcessorVersionIdStage,
                    CreatedAtStage,
                    UpdatedAtStage,
                    _FinalStage {
        private String id;

        private ProcessorStatus status;

        private String processorId;

        private String processorName;

        private String processorVersionId;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private Optional<DocumentProcessorRunCredits> usage = Optional.empty();

        private Optional<ProcessorRunSummaryType> type = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ProcessorRunSummary other) {
            id(other.getId());
            status(other.getStatus());
            processorId(other.getProcessorId());
            processorName(other.getProcessorName());
            processorVersionId(other.getProcessorVersionId());
            type(other.getType());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            usage(other.getUsage());
            return this;
        }

        /**
         * <p>The ID of the processor run.</p>
         * <p>Example: <code>&quot;dpr_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         * <p>The ID of the processor run.</p>
         * <p>Example: <code>&quot;dpr_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public StatusStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("status")
        public ProcessorIdStage status(@NotNull ProcessorStatus status) {
            this.status = Objects.requireNonNull(status, "status must not be null");
            return this;
        }

        /**
         * <p>The ID of the processor that was run. Will always start with &quot;dp_&quot;.</p>
         * <p>Example: <code>&quot;dp_BMdfq_yWM3sT-ZzvCnA3f&quot;</code></p>
         * <p>The ID of the processor that was run. Will always start with &quot;dp_&quot;.</p>
         * <p>Example: <code>&quot;dp_BMdfq_yWM3sT-ZzvCnA3f&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processorId")
        public ProcessorNameStage processorId(@NotNull String processorId) {
            this.processorId = Objects.requireNonNull(processorId, "processorId must not be null");
            return this;
        }

        /**
         * <p>The name of the processor that was run.</p>
         * <p>Example: <code>&quot;Invoice Extractor&quot;</code></p>
         * <p>The name of the processor that was run.</p>
         * <p>Example: <code>&quot;Invoice Extractor&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processorName")
        public ProcessorVersionIdStage processorName(@NotNull String processorName) {
            this.processorName = Objects.requireNonNull(processorName, "processorName must not be null");
            return this;
        }

        /**
         * <p>The ID of the processor version that was run. Will always start with &quot;dpv_&quot;.</p>
         * <p>Example: <code>&quot;dpv_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         * <p>The ID of the processor version that was run. Will always start with &quot;dpv_&quot;.</p>
         * <p>Example: <code>&quot;dpv_Zk9mNP12Qw4-yTv8BdR3H&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processorVersionId")
        public CreatedAtStage processorVersionId(@NotNull String processorVersionId) {
            this.processorVersionId = Objects.requireNonNull(processorVersionId, "processorVersionId must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the processor run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:29:55Z&quot;</code></p>
         * <p>The time (in UTC) at which the processor run was created. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T15:29:55Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        /**
         * <p>The time (in UTC) at which the processor run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * <p>The time (in UTC) at which the processor run was last updated. Will follow the RFC 3339 format.</p>
         * <p>Example: <code>&quot;2024-03-21T16:45:00Z&quot;</code></p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updatedAt")
        public _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage usage(DocumentProcessorRunCredits usage) {
            this.usage = Optional.ofNullable(usage);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "usage", nulls = Nulls.SKIP)
        public _FinalStage usage(Optional<DocumentProcessorRunCredits> usage) {
            this.usage = usage;
            return this;
        }

        /**
         * <p>The type of processor that was run:</p>
         * <ul>
         * <li><code>&quot;EXTRACT&quot;</code> - Extraction processor</li>
         * <li><code>&quot;SPLITTER&quot;</code> - Splitting processor</li>
         * <li><code>&quot;CLASSIFY&quot;</code> - Classification processor</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage type(ProcessorRunSummaryType type) {
            this.type = Optional.ofNullable(type);
            return this;
        }

        /**
         * <p>The type of processor that was run:</p>
         * <ul>
         * <li><code>&quot;EXTRACT&quot;</code> - Extraction processor</li>
         * <li><code>&quot;SPLITTER&quot;</code> - Splitting processor</li>
         * <li><code>&quot;CLASSIFY&quot;</code> - Classification processor</li>
         * </ul>
         */
        @java.lang.Override
        @JsonSetter(value = "type", nulls = Nulls.SKIP)
        public _FinalStage type(Optional<ProcessorRunSummaryType> type) {
            this.type = type;
            return this;
        }

        @java.lang.Override
        public ProcessorRunSummary build() {
            return new ProcessorRunSummary(
                    id,
                    status,
                    processorId,
                    processorName,
                    processorVersionId,
                    type,
                    createdAt,
                    updatedAt,
                    usage,
                    additionalProperties);
        }
    }
}
